!function(t){var e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(o,i,function(e){return t[e]}.bind(null,i));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);const o=document.createElement("template");o.innerHTML="\n<slot></slot>\n  ";class i extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(o.content.cloneNode(!0))}}window.customElements.define("text-message",i);const s=document.createElement("template");s.innerHTML='\n<style>\n    textarea{\n     width: var(--autogrow-textarea-width, 100%);\n     padding: 12px 20px;\n     margin-top: 8px;\n     display: inline-block;\n     border: 1px solid #ccc;\n     border-radius: 4px;\n     box-sizing: border-box;\n    }\n    textarea:focus{\n    outline: 1px solid #6119EA;\n    }\n    ::slotted(*){\n        font-size: 18px;\n    }\n    p{\n    color:#DC3545;\n    }\n</style>\n<slot name="label"></slot>\n<textarea id="input"></textarea>\n<p id="require"></p>\n<p id="max"></p>\n<p id="min"></p>\n';class r extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(s.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("textarea").placeholder=this.placeholder,this.shadowRoot.querySelector("textarea").rows=this.rows,this.addEventListener("keyup",this.getValue),this.addEventListener("focusout",this.getValue),this.textArea=this.shadowRoot.querySelector("textarea"),this.autoGrow(),this.shadowRoot.querySelector("textarea").disabled=this.disable,this.shadowRoot.querySelector("textarea").value=this.value,null===this.value&&null===this.placeholder&&(this.shadowRoot.querySelector("textarea").placeholder="")}autoGrow(){this.textArea.setAttribute("style","height:"+this.textArea.scrollHeight+"px;overflow-y:hidden;resize:none;"),this.textArea.addEventListener("input",(function(){this.style.height="auto",this.style.height=this.scrollHeight+"px"}),!1)}getValue(){const t=this.shadowRoot.querySelector("textarea").value;this.verify(t),this.setAttribute("value",t)}verify(t){let e;""===t&&!0===this.required?(e="This field is require",this.shadowRoot.getElementById("require").innerHTML=e,this.shadowRoot.querySelector("textarea").style.outline="1px solid red",this.setAttribute("valid","false")):t.length<this.min&&null!==this.min?(e="This field must not be less then "+this.min,this.shadowRoot.getElementById("min").innerHTML=e,this.shadowRoot.getElementById("require").innerHTML=null,this.shadowRoot.querySelector("textarea").style.outline="1px solid red",this.setAttribute("valid","false")):t.length>this.max&&null!==this.max?(e="This field must not be greater then "+this.max,this.shadowRoot.getElementById("max").innerHTML=e,this.shadowRoot.getElementById("min").innerHTML=null,this.shadowRoot.querySelector("textarea").style.outline="1px solid red",this.setAttribute("valid","false")):(this.shadowRoot.getElementById("require").innerHTML=null,this.shadowRoot.getElementById("min").innerHTML=null,this.shadowRoot.getElementById("max").innerHTML=null,this.shadowRoot.querySelector("textarea").style.outline="1px solid #6119EA",this.setAttribute("valid","true"))}get placeholder(){return this.getAttribute("placeholder")}get rows(){return this.getAttribute("rows")}get min(){return this.getAttribute("min")}get max(){return this.getAttribute("max")}get required(){return this.hasAttribute("required")}get value(){return this.getAttribute("value")}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("autogrow-textarea",r);const a=document.createElement("template");a.innerHTML='\n<style>\n    input{\n     width: var(--email-address-width, 100%);\n     padding: 12px 20px;\n     display: inline-block;\n     border: 1px solid #ccc;\n     border-radius: 4px;\n     box-sizing: border-box;\n    }\n    input:focus{\n    outline: 1px solid #6119EA;\n    }\n    ::slotted(*){\n        font-size: 18px;\n        margin-bottom: 8px;\n    }\n    p{\n    color:#DC3545;\n    }\n</style>\n<slot name="label"></slot>\n<input type="email" id="input">    \n<p id="require"></p>\n<p id="wrong-format"></p>\n';const l=/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;class d extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(a.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("input").placeholder=this.placeholder,this.addEventListener("focusout",this.getValue),this.shadowRoot.querySelector("input").disabled=this.disable,this.shadowRoot.querySelector("input").value=this.value,null===this.value&&null===this.placeholder&&(this.shadowRoot.querySelector("input").placeholder="")}getValue(){const t=this.shadowRoot.querySelector("input").value;this.verify(t),this.setAttribute("value",t)}verify(t){let e;""===t&&!0===this.required?(e="Email is require",this.shadowRoot.getElementById("require").innerHTML=e,this.shadowRoot.getElementById("wrong-format").innerHTML=null,this.shadowRoot.querySelector("input").style.outline="1px solid red",this.setAttribute("valid","false")):t.match(l)?(this.shadowRoot.getElementById("require").innerHTML=null,this.shadowRoot.getElementById("wrong-format").innerHTML=null,this.shadowRoot.querySelector("input").style.outline="1px solid #6119EA",this.setAttribute("valid","true")):(this.shadowRoot.getElementById("require").innerHTML=null,e="Wrong email format",this.shadowRoot.getElementById("wrong-format").innerHTML=e,this.shadowRoot.querySelector("input").style.outline="1px solid red",this.setAttribute("valid","false"))}get placeholder(){return this.getAttribute("placeholder")}get required(){return this.hasAttribute("required")}get value(){return this.getAttribute("value")}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("email-address",d);const h=document.createElement("template");h.innerHTML='\n<style>\n*,\n*::before,\n*::after {\n  box-sizing: border-box; \n}\n.input-container{\n    margin: 0 20px;\n}\n.file{\n    position: relative;\n    display: inline-block;\n    width: 100%;\n    height: calc(1.5em + .75rem + 2px);\n    margin-bottom: 0;\n}\n.file-input{\n    position: relative;\n    z-index: 2;\n    width: 100%;\n    height: calc(1.5em + .75rem + 2px);\n    margin: 0;\n    opacity: 0;\n}\n.file-label{\n    transition: background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n}\n.file-label {\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    z-index: 1;\n    height: calc(1.5em + .75rem + 2px);\n    padding: .375rem .75rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #495057;\n    background-color: #fff;\n    border: 1px solid #ced4da;\n    border-radius: .25rem;\n}\n.file-label::after {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 3;\n    display: block;\n    height: calc(1.5em + .75rem);\n    padding: .375rem .75rem;\n    line-height: 1.5;\n    color: #495057;\n    content: "Browse";\n    background-color: #e9ecef;\n    border-left: inherit;\n    border-radius: 0 .25rem .25rem 0;\n}\n\n</style>\n<div class="input-container">\n    <div class="file">\n      <input type="file" class="file-input" id="customFile" name="filename">\n      <label class="file-label" for="customFile">Choose file</label>\n    </div>\n</div> \n';class c extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(h.content.cloneNode(!0))}connectedCallback(){this.image&&(this.shadowRoot.querySelector("input").accept="image/*"),this.multiple&&(this.shadowRoot.querySelector("input").multiple=!0),this.shadowRoot.querySelector(".file-input").addEventListener("change",this.fileName.bind(this))}fileName(){if(this.noname)this.shadowRoot.querySelector("label").innerHTML="selected";else{let t=[],e=this.shadowRoot.querySelector("input").files;for(let n=0;n<e.length;n++){let o=e[n].name;t.push(o)}this.shadowRoot.querySelector("label").innerHTML=t.toString()}}get multiple(){return this.hasAttribute("multiple")}get image(){return this.hasAttribute("image")}get noname(){return this.hasAttribute("noname")}}window.customElements.define("file-input",c);const u=document.createElement("template");u.innerHTML='\n<style>\n    input{\n     width: var(--input-number-width, 100%);\n     padding: 12px 20px;\n     display: inline-block;\n     border: 1px solid #ccc;\n     border-radius: 4px;\n     box-sizing: border-box;\n    }\n    input:focus{\n    outline: 1px solid #6119EA;\n    }\n    ::slotted(*){\n        font-size: 18px;\n        margin-bottom: 8px;\n    }\n    p{\n    color:#DC3545;\n    }\n</style>\n<slot name="label"></slot>\n<input type="number" id="input">    \n<p id="require"></p>\n<p id="max"></p>\n<p id="min"></p>\n';class p extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(u.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("input").placeholder=this.placeholder,this.shadowRoot.querySelector("input").value=this.value,null===this.value&&null===this.placeholder&&(this.shadowRoot.querySelector("input").placeholder=""),this.addEventListener("keyup",this.getValue),this.addEventListener("focusout",this.getValue),this.shadowRoot.querySelector("input").disabled=this.disable}getValue(){const t=this.shadowRoot.querySelector("input").value;this.verify(t),this.setAttribute("value",t)}verify(t){let e;""===t&&!0===this.required?(e="This field is require",this.shadowRoot.getElementById("require").innerHTML=e,this.shadowRoot.querySelector("input").style.outline="1px solid red",this.setAttribute("valid","false")):t.length<this.min&&null!==this.min?(e="This field must not be less then "+this.min,this.shadowRoot.getElementById("min").innerHTML=e,this.shadowRoot.getElementById("require").innerHTML=null,this.shadowRoot.querySelector("input").style.outline="1px solid red",this.setAttribute("valid","false")):t.length>this.max&&null!==this.max?(e="This field must not be greater then "+this.max,this.shadowRoot.getElementById("max").innerHTML=e,this.shadowRoot.getElementById("min").innerHTML=null,this.shadowRoot.querySelector("input").style.outline="1px solid red",this.setAttribute("valid","false")):(this.shadowRoot.getElementById("require").innerHTML=null,this.shadowRoot.getElementById("min").innerHTML=null,this.shadowRoot.getElementById("max").innerHTML=null,this.shadowRoot.querySelector("input").style.outline="1px solid #6119EA",this.setAttribute("valid","true"))}get placeholder(){return this.getAttribute("placeholder")}get min(){return this.getAttribute("min")}get max(){return this.getAttribute("max")}get required(){return this.hasAttribute("required")}get value(){return this.getAttribute("value")}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("input-number",p);const b=document.createElement("template");b.innerHTML='\n<style>\n    input{\n     width: var(--input-password-width, 100%);\n     padding: 12px 20px;\n     display: inline-block;\n     border: 1px solid #ccc;\n     border-radius: 4px;\n     box-sizing: border-box;\n    }\n    input:focus{\n    outline: 1px solid #6119EA;\n    }\n    ::slotted(*){\n        font-size: 18px;\n        margin-bottom: 8px;\n    }\n    p{\n    color:#DC3545;\n    }\n</style>\n<slot name="label"></slot>\n<input type="password" id="input">    \n<p id="require"></p>\n<p id="max"></p>\n<p id="min"></p>\n';class g extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(b.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("input").placeholder=this.placeholder,this.shadowRoot.querySelector("input").value=this.value,null===this.value&&null===this.placeholder&&(this.shadowRoot.querySelector("input").placeholder=""),this.addEventListener("keyup",this.getValue),this.addEventListener("focusout",this.getValue),this.shadowRoot.querySelector("input").disabled=this.disable}getValue(){const t=this.shadowRoot.querySelector("input").value;this.verify(t),this.setAttribute("value",t)}verify(t){let e;""===t&&!0===this.required?(e="This field is require",this.shadowRoot.getElementById("require").innerHTML=e,this.shadowRoot.querySelector("input").style.outline="1px solid red",this.setAttribute("valid","false")):t.length<this.min&&null!==this.min?(e="This field must not be less then "+this.min,this.shadowRoot.getElementById("min").innerHTML=e,this.shadowRoot.getElementById("require").innerHTML=null,this.shadowRoot.querySelector("input").style.outline="1px solid red",this.setAttribute("valid","false")):t.length>this.max&&null!==this.max?(e="This field must not be greater then "+this.max,this.shadowRoot.getElementById("max").innerHTML=e,this.shadowRoot.getElementById("min").innerHTML=null,this.shadowRoot.querySelector("input").style.outline="1px solid red",this.setAttribute("valid","false")):(this.shadowRoot.getElementById("require").innerHTML=null,this.shadowRoot.getElementById("min").innerHTML=null,this.shadowRoot.getElementById("max").innerHTML=null,this.shadowRoot.querySelector("input").style.outline="1px solid #6119EA",this.setAttribute("valid","true"))}get placeholder(){return this.getAttribute("placeholder")}get min(){return this.getAttribute("min")}get max(){return this.getAttribute("max")}get required(){return this.hasAttribute("required")}get value(){return this.getAttribute("value")}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("input-password",g);const m=document.createElement("template");m.innerHTML='\n<style>\n    input{\n     width: var(--input-text-width, 100%);\n     padding: 12px 20px;\n     display: inline-block;\n     border: 1px solid #ccc;\n     border-radius: 4px;\n     box-sizing: border-box;\n    }\n    input:focus{\n    outline: 1px solid #6119EA;\n    }\n    ::slotted(*){\n        font-size: 18px;\n        margin-bottom: 8px;\n    }\n    p{\n    color:#DC3545;\n    }\n</style>\n<slot name="label"></slot>\n<input id="input">    \n<p id="require"></p>\n<p id="max"></p>\n<p id="min"></p>\n';class y extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(m.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("input").placeholder=this.placeholder,this.shadowRoot.querySelector("input").value=this.value,null===this.value&&null===this.placeholder&&(this.shadowRoot.querySelector("input").placeholder=""),this.addEventListener("keyup",this.getValue),this.addEventListener("focusout",this.getValue),this.shadowRoot.querySelector("input").disabled=this.disable}getValue(){const t=this.shadowRoot.querySelector("input").value;this.verify(t),this.setAttribute("value",t)}verify(t){let e;""===t&&!0===this.required?(e="This field is require",this.shadowRoot.getElementById("require").innerHTML=e,this.shadowRoot.querySelector("input").style.outline="1px solid red",this.setAttribute("valid","false")):t.length<this.min&&null!==this.min?(e="This field must not be less then "+this.min,this.shadowRoot.getElementById("min").innerHTML=e,this.shadowRoot.getElementById("require").innerHTML=null,this.shadowRoot.querySelector("input").style.outline="1px solid red",this.setAttribute("valid","false")):t.length>this.max&&null!==this.max?(e="This field must not be greater then "+this.max,this.shadowRoot.getElementById("max").innerHTML=e,this.shadowRoot.getElementById("min").innerHTML=null,this.shadowRoot.querySelector("input").style.outline="1px solid red",this.setAttribute("valid","false")):(this.shadowRoot.getElementById("require").innerHTML=null,this.shadowRoot.getElementById("min").innerHTML=null,this.shadowRoot.getElementById("max").innerHTML=null,this.shadowRoot.querySelector("input").style.outline="1px solid #6119EA",this.setAttribute("valid","true"))}get placeholder(){return this.getAttribute("placeholder")}get min(){return this.getAttribute("min")}get max(){return this.getAttribute("max")}get value(){return this.getAttribute("value")}get required(){return this.hasAttribute("required")}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("input-text",y);const x=document.createElement("template");x.innerHTML='\n<style>\n    .item1 { \n        grid-area: img;\n    }\n    .item2 {\n        grid-area: body;\n    }\n    .grid-container {\n        border-top: 1px solid rgba(205,205,205,0.19);\n        border-bottom: 1px solid rgba(205,205,205,0.19);\n        display: grid;\n        grid-template-areas:\n            \'img body body body body body\'\n            \'img body body body body body\'\n            \'img body body body body body\';\n        grid-gap: 20px;\n        padding: 10px;\n        cursor: pointer;\n        background: var(--avatar-card-background, white);\n        color: var(--avatar-card-color, black);\n    }\n    .grid-container:hover{\n        background: rgba(233,213,255,0.37);\n        background: var(--avatar-card-background-hover, rgba(233,213,255,0.37));\n        color: var(--avatar-card-color-hover    , black);\n    }\n    .grid-container > div {\n        text-align: var(--avatar-card-text-alighn, left);\n    }\n    ::slotted(*) {\n        padding: 4px 0;\n    }\n    .dark {\n        background: rgba(31,41,49,0.66);\n        border: none;\n        color: #A2A2A2;\n    }\n    .dark:hover{\n        background: #1F2931;\n        color: #A2A2A2;\n    }\n</style>\n<div class="grid-container" id="avatar-card">\n    <div class="item1">\n        <slot name="img"></slot>\n    </div>\n    <div class="item2">\n        <slot name="body"></slot>\n    </div>\n</div>\n';class w extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(x.content.cloneNode(!0))}connectedCallback(){this.parentNode.hasAttribute("dark")&&this.shadowRoot.querySelector("#avatar-card").classList.add("dark")}}window.customElements.define("avatar-card",w);const f=document.createElement("template");f.innerHTML='\n    <style>\n        div{\n         padding: 20px 0;\n         border: var(--avatar-list-border, 1px solid rgba(0,0,0,0.11));\n         background: var(--avatar-list-background, white);\n         box-shadow: 0 0 4px 1px rgba(115,115,115,0.23)!important;\n        }\n        ::slotted([slot="header"]){\n            text-align: center;\n        }\n        .dark {\n            background: black;\n            border: none;\n            color: white;\n        }\n    </style>\n    <div>\n        <slot name="header"></slot>\n        <slot name="card"></slot>\n    </div>\n  ';class v extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(f.content.cloneNode(!0))}connectedCallback(){this.dark&&this.shadowRoot.querySelector("div").classList.add("dark")}get dark(){return this.hasAttribute("dark")}set dark(t){t?this.setAttribute("dark",""):this.removeAttribute("dark")}}window.customElements.define("avatar-list",v);const k=document.createElement("template");k.innerHTML='\n<style>\n    .img-card {\n      margin: 5px;\n      border: 1px solid #ccc;\n      width: 280px;\n      transition: 0.5s;\n      border-radius: 4px;\n      display: inline-block;\n      /*position: relative;*/\n    }\n    .img-card:hover{\n       box-shadow: 0 0 10px 3px rgba(0,0,0,0.11);\n    }\n    \n    .img-card img {\n      width: 100%;\n      height: 100%;\n    }\n    \n    .caption {\n    /*position: absolute;*/\n    /*bottom: 5px;*/\n      margin-top:10px;\n      padding: 15px;\n      text-align: center;\n      font-size: 3vmin;\n    }\n    .caption:hover{\n       cursor: pointer;\n    }\n</style>\n<div class="img-card">\n    <img>\n    <div class="caption"></div>\n</div>\n  ';class S extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(k.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("img").src=this.src,this.shadowRoot.querySelector("img").alt=this.alt,this.shadowRoot.querySelector("div").style.height=this.height,this.shadowRoot.querySelector("div").style.width=this.width,this.shadowRoot.querySelector(".caption").innerText=this.caption,null==this.caption&&(this.shadowRoot.querySelector(".caption").style.display="none",this.shadowRoot.querySelector("img").style.height="100%",this.shadowRoot.querySelector(".img-card").style.border="none")}get src(){return this.getAttribute("src")}get alt(){return this.getAttribute("alt")}get width(){return this.getAttribute("width")}get height(){return this.getAttribute("height")}get caption(){return this.getAttribute("caption")}}window.customElements.define("img-item",S);const R=document.createElement("template");R.innerHTML="\n<style>\n    div{\n        display: flex;\n        height: var(--tool-bar-height, 40px);\n        width: 100%;\n        background: var(--tool-bar-background, white);\n        margin: 0;\n        padding: 1px;\n    }\n</style>\n<div>\n    <slot></slot>\n</div>\n  ";class E extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(R.content.cloneNode(!0))}}window.customElements.define("tool-bar",E);const q=document.createElement("template");q.innerHTML='\n    <style>\n        button {\n            border: 1px solid rgba(0,0,0,0.08);\n            padding: 12px 20px;\n            text-align: center;\n            text-decoration: none;\n            display: inline-block;\n            font-size: 16px;\n            cursor: pointer;\n            color: black;\n            float: left;\n            background: white;\n            transition: 0.1s;\n        }\n        button:hover{\n            background: rgba(0,0,0,0.06);\n        }\n        .active{\n            background: rgba(0,0,0,0.09);\n        }\n    </style>\n    <button>\n        <slot name="icon"></slot>\n    </button>\n';class A extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(q.content.cloneNode(!0))}connectedCallback(){this.setInnerHtml(),this.activation(),this.shadowRoot.querySelector("button").addEventListener("click",this.activate.bind(this))}activate(){this.active=!0,this.shadowRoot.querySelector("button").classList.contains("active")?(this.active=!1,this.shadowRoot.querySelector("button").classList.remove("active")):this.shadowRoot.querySelector("button").classList.add("active")}activation(){this.active&&this.shadowRoot.querySelector("button").classList.add("active")}get content(){return this.getAttribute("content")}setInnerHtml(){null!=this.content&&(this.shadowRoot.querySelector("button").innerHTML=this.content)}get active(){return this.hasAttribute("active")}set active(t){t?this.setAttribute("active",""):this.removeAttribute("active")}}window.customElements.define("group-button",A);const L=document.createElement("template");L.innerHTML="\n<style>\n    div{\n        display: flex;\n        height: var(--tool-bar-height, 40px);\n        background: var(--tool-bar-background, white);\n        color: var(--tool-bar-color, black);\n        margin: 0;\n    }\n</style>\n<div>\n    <slot></slot>\n</div>\n";class T extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(L.content.cloneNode(!0))}connectedCallback(){this.selection()}selection(){if(this.multiple);else if(this.single){setTimeout(this.addEvents.bind(this),300)}}addEvents(){let t=this.querySelectorAll("group-button");for(let e=0;e<t.length;e++)this.querySelectorAll("group-button")[e].addEventListener("click",this.activate.bind(this,e))}activate(t){let e=this.querySelectorAll("group-button");for(let t=0;t<e.length;t++)e[t].active=!1,e[t].shadowRoot.querySelector("button").classList.remove("active");e[t].active=!0,e[t].shadowRoot.querySelector("button").classList.add("active")}get single(){return this.hasAttribute("single")}get multiple(){return this.hasAttribute("multiple")}}window.customElements.define("toggle-button",T);const C=document.createElement("template");C.innerHTML='\n<style>\n    .card{\n        padding: 40px 20px;\n        box-shadow: 0 0 17px 1px rgba(0,0,0,0.07);\n        text-align: center;\n        display: flex;\n    }\n    .city-date{    \n        width:40%;\n        font-size: 3vmax;\n    }\n    .time{\n        width:58%\n        float: right;\n        display: flex;\n        font-size: 6vmax;\n        justify-content: center;\n        margin: 0 auto;\n    }\n    \n</style>\n<div class="card">\n    <div class="city-date">\n        <slot name="city-name"></slot>\n        <slot name="full-date"></slot>\n    </div>\n    <div class="time">\n        <slot name="local-time"></slot>\n        <slot name="period"></slot>\n    </div>\n</div>\n';class H extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(C.content.cloneNode(!0))}}window.customElements.define("time-card",H);const M=document.createElement("template");M.innerHTML='\n<style>\n    .container{\n        position:relative;\n    }\n    .meridiem{\n        padding: 0 10px;\n        transition: 0.1s;\n        border-radius: 2px;\n        cursor:pointer;\n    }\n    .meridiem:hover{\n        border: 1px dashed rgba(0,0,255,0.43);\n    }\n    form{\n        display: flex;\n    }\n    input[type=text] {\n      width: 90%;\n      padding: 15px 25px;\n      box-sizing: border-box;\n    }\n    .submit-form, .cancel{\n        font-weight: bold;\n        cursor: pointer;\n        text-shadow: 2px 2px rgba(0,0,0,0.21);\n        background: white;\n        border: none;\n    }\n    .submit-form{\n        font-size: 23px;    \n    }  \n    .cancel{\n        color: red;\n        position: absolute;\n        top: 5px;\n        left: -15px;\n        background: white;\n    }\n</style>\n<div class="container">\n    <div class="meridiem"></div>\n    <div class="editor">\n        <form>\n            <input type="text" placeholder="AM or PM"> \n             <button type="submit" class="submit-form">&#x1f4be;</button>\n        </form>\n        <button class="cancel">&#10060;</button>\n    </div>\n</div> \n';class D extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(M.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector(".meridiem").innerHTML=this.content,this.shadowRoot.querySelector(".editor").style.display="none",this.shadowRoot.querySelector(".submit-form").style.display="none",this.events()}events(){this.shadowRoot.querySelector(".meridiem").addEventListener("click",this.editMeridiem.bind(this),!1),this.shadowRoot.querySelector(".cancel").addEventListener("click",this.closeEditor.bind(this),!1),this.shadowRoot.querySelector("input").addEventListener("keyup",this.showSaveButton.bind(this),!1),this.shadowRoot.querySelector("form").addEventListener("submit",this.submit.bind(this),!1),this.addEventListener("meridiemUpdated",t=>console.log(t.detail))}submit(t){t.preventDefault();let e=this.shadowRoot.querySelector("input").value;""!==e&&(this.shadowRoot.querySelector(".meridiem").innerHTML=e,this.shadowRoot.querySelector(".editor").style.display="none",this.shadowRoot.querySelector(".meridiem").style.display="inline",this.shadowRoot.querySelector(".submit-form").style.display="none",this.shadowRoot.querySelector("input").value=null,this.dispatchEvent(new CustomEvent("meridiemUpdated",{bubbles:!0,detail:"Updated Successfully"})))}closeEditor(){this.shadowRoot.querySelector(".meridiem").innerHTML=this.content,this.shadowRoot.querySelector("input").value=null,this.shadowRoot.querySelector(".submit-form").style.display="none",this.shadowRoot.querySelector(".editor").style.display="none",this.shadowRoot.querySelector(".meridiem").style.display="inline"}closeEditor(){this.shadowRoot.querySelector(".editor").style.display="none",this.shadowRoot.querySelector(".meridiem").style.display="inline"}showSaveButton(t){"Enter"!==t.key&&(this.shadowRoot.querySelector(".submit-form").style.display="inline"),""===this.shadowRoot.querySelector("input").value&&(this.shadowRoot.querySelector(".submit-form").style.display="none")}editMeridiem(){this.shadowRoot.querySelector(".meridiem").style.display="none",this.shadowRoot.querySelector(".editor").style.display="inline"}get content(){return this.getAttribute("content")}}window.customElements.define("meridiem-period",D);const B=document.createElement("template");B.innerHTML='\n<style>\n    .container{\n        position:relative;\n    }\n    .time{\n        padding: 0 10px;\n        transition: 0.1s;\n        border-radius: 2px;\n        cursor:pointer;\n    }\n    .time:hover{\n        border: 1px dashed rgba(0,0,255,0.43);\n    }\n    form{\n        display: flex;\n    }\n    input[type=text] {\n      width: 90%;\n      padding: 15px 25px;\n      box-sizing: border-box;\n    }\n    .submit-form, .cancel{\n        font-weight: bold;\n        cursor: pointer;\n        text-shadow: 2px 2px rgba(0,0,0,0.21);\n        background: white;\n        border: none;\n    }\n    .submit-form{\n        font-size: 23px;    \n    }  \n    .cancel{\n        color: red;\n        position: absolute;\n        top: 5px;\n        left: -15px;\n        background: white;\n    }\n</style>\n<div class="container">\n    <div class="time"></div>\n    <div class="editor">\n        <form>\n            <input type="text" placeholder="Time here">\n             <button type="submit" class="submit-form">&#x1f4be;</button>\n        </form>\n        <button class="cancel">&#10060;</button>\n    </div>\n</div>\n  ';class N extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(B.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector(".time").innerHTML=this.content,this.shadowRoot.querySelector(".editor").style.display="none",this.shadowRoot.querySelector(".submit-form").style.display="none",this.events()}events(){this.shadowRoot.querySelector(".time").addEventListener("click",this.editTime.bind(this),!1),this.shadowRoot.querySelector(".cancel").addEventListener("click",this.closeEditor.bind(this),!1),this.shadowRoot.querySelector("input").addEventListener("keyup",this.showSaveButton.bind(this),!1),this.shadowRoot.querySelector("form").addEventListener("submit",this.submit.bind(this),!1),this.addEventListener("timeUpdated",t=>console.log(t.detail))}submit(t){t.preventDefault();let e=this.shadowRoot.querySelector("input").value;""!==e&&(this.shadowRoot.querySelector(".time").innerHTML=e,this.shadowRoot.querySelector(".editor").style.display="none",this.shadowRoot.querySelector(".time").style.display="inline",this.shadowRoot.querySelector(".submit-form").style.display="none",this.shadowRoot.querySelector("input").value=null,this.dispatchEvent(new CustomEvent("timeUpdated",{bubbles:!0,detail:"Updated Successfully"})))}closeEditor(){this.shadowRoot.querySelector(".time").innerHTML=this.content,this.shadowRoot.querySelector("input").value=null,this.shadowRoot.querySelector(".submit-form").style.display="none",this.shadowRoot.querySelector(".editor").style.display="none",this.shadowRoot.querySelector(".time").style.display="inline"}showSaveButton(t){"Enter"!==t.key&&(this.shadowRoot.querySelector(".submit-form").style.display="inline"),""===this.shadowRoot.querySelector("input").value&&(this.shadowRoot.querySelector(".submit-form").style.display="none")}editTime(){this.shadowRoot.querySelector(".time").style.display="none",this.shadowRoot.querySelector(".editor").style.display="inline"}get content(){return this.getAttribute("content")}}window.customElements.define("local-time",N);const z=document.createElement("template");z.innerHTML='\n<style>\n    .container{\n        position:relative;\n    }\n    .date{\n        padding: 10px;\n        opacity: 0.6;\n        transition: 0.1s;\n        border-radius: 2px;\n        cursor:pointer;\n    }   \n    .date:hover{\n        border: 1px dashed rgba(0,0,255,0.43);\n    }\n    form{\n    display: flex;\n    }\n    input[type=date] {\n      width: 100%;\n      margin: 10px 0;\n      padding: 8px 15px;\n      box-sizing: border-box;\n    }\n    .submit-form, .cancel{\n        font-weight: bold;\n        cursor: pointer;\n        text-shadow: 2px 2px rgba(0,0,0,0.21);\n        background: white;\n        border: none;\n    }\n    .submit-form{\n        font-size: 23px;    \n    }  \n    .cancel{\n        color: red;\n        position: absolute;\n        top: 5px;\n        left: -15px;\n        background: white;\n    }\n</style>\n<div class="container">\n    <div class="date"></div>\n    <div class="editor">\n    <form>\n        <input type="date">\n        <button type="submit" class="submit-form">&#x1f4be;</button>\n    </form>\n    <button class="cancel">&#10060;</button>\n    </div>\n</div>\n  ';class F extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(z.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector(".date").innerHTML=this.content,this.shadowRoot.querySelector(".editor").style.display="none",this.shadowRoot.querySelector(".submit-form").style.display="none",this.events(),this.addEventListener("dateUpdated",t=>console.log(t.detail))}events(){this.shadowRoot.querySelector(".date").addEventListener("click",this.editDate.bind(this),!1),this.shadowRoot.querySelector(".cancel").addEventListener("click",this.closeEditor.bind(this),!1),this.shadowRoot.querySelector("input").addEventListener("change",this.showSaveButton.bind(this),!1),this.shadowRoot.querySelector("form").addEventListener("submit",this.submit.bind(this),!1)}submit(t){t.preventDefault();let e=this.shadowRoot.querySelector("input").value;""!==e&&(this.shadowRoot.querySelector(".date").innerHTML=e,this.shadowRoot.querySelector(".editor").style.display="none",this.shadowRoot.querySelector(".date").style.display="inline",this.shadowRoot.querySelector(".submit-form").style.display="none",this.shadowRoot.querySelector("input").value=null,this.dispatchEvent(new CustomEvent("dateUpdated",{bubbles:!0,detail:"Updated Successfully"})))}closeEditor(){this.shadowRoot.querySelector(".date").innerHTML=this.content,this.shadowRoot.querySelector("input").value=null,this.shadowRoot.querySelector(".submit-form").style.display="none",this.shadowRoot.querySelector(".editor").style.display="none",this.shadowRoot.querySelector(".date").style.display="inline"}showSaveButton(t){"Enter"!==t.key&&(this.shadowRoot.querySelector(".submit-form").style.display="inline"),""===this.shadowRoot.querySelector("input").value&&(this.shadowRoot.querySelector(".submit-form").style.display="none")}editDate(){this.shadowRoot.querySelector(".editor").style.display="inline",this.shadowRoot.querySelector(".date").style.display="none"}get content(){return this.getAttribute("content")}}window.customElements.define("full-date",F);const I=document.createElement("template");I.innerHTML="\n<div></div> \n ";class O extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(I.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("div").innerHTML=this.content}get content(){return this.getAttribute("content")}}window.customElements.define("city-name",O);const P=document.createElement("template");P.innerHTML='\n<style>\n.modal {\n  position: fixed; \n  z-index: 1;\n  padding-top: 100px;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgb(0,0,0); \n  background-color: rgba(0,0,0,0.4); \n}\n\n.modal-content {\n  background-color: #fefefe;\n  margin: auto;\n  padding: 20px;\n  border: 1px solid rgba(180,180,180,0.11);\n  width: 80%;\n  border-radius: 4px;\n  transition: 0.2s;\n}\n.close {\n  color: #aaaaaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: #000;\n  text-decoration: none;\n  cursor: pointer;\n}\n</style>\n<slot name="open-modal" id="myBtn"></slot>\n<div id="myModal" class="modal">\n  <div class="modal-content fade">\n    <span class="close">&times;</span>\n    <div>\n        <slot name="modal-body"></slot>\n    </div>\n  </div>\n</div>\n  ';class V extends HTMLElement{static get observedAttributes(){return["close"]}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(P.content.cloneNode(!0))}attributeChangedCallback(t,e,n){this.close&&(this.modal.style.display="none")}connectedCallback(){this.modal=this.shadowRoot.querySelector("#myModal"),this.btn=this.shadowRoot.querySelector("#myBtn"),this.span=this.shadowRoot.querySelector(".close"),this.modal.style.display="none",this.modal.querySelector(".modal-content").style.opacity="1",this.btn.addEventListener("click",function(){this.modal.style.display="block"}.bind(this)),this.span.addEventListener("click",function(){this.modal.style.display="none"}.bind(this)),this.modalStyling(),this.modal.addEventListener("click",function(){this.modal.style.display="none"}.bind(this))}modalStyling(){if("small"===this.size?this.shadowRoot.querySelector(".modal-content").style.width="35%":"medium"===this.size?this.shadowRoot.querySelector(".modal-content").style.width="55%":this.shadowRoot.querySelector(".modal-content").style.width="80%",this.fade){let t=this;this.modal.querySelector(".modal-content").style.opacity="0.5",setTimeout((function(){t.shadowRoot.querySelector(".modal-content").style.opacity="1"}),1460)}}get close(){return this.hasAttribute("close")}get fade(){return this.hasAttribute("fade")}get size(){return this.getAttribute("size")}}window.customElements.define("pop-up",V);const U=document.createElement("template");U.innerHTML='\n    <style>\n    span{\n      width: 56px; \n      height: 56px;\n      cursor: pointer;\n    }\n    input{\n      width: 20px; \n      height: 20px;\n}\n</style>\n    <span>\n        <input type="checkbox">\n    </span>\n    <slot></slot>\n  ';class _ extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(U.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("input").checked=this.checked,this.shadowRoot.querySelector("input").disabled=this.disabled,this.addEventListener("click",this._onClick)}get checked(){return this.hasAttribute("checked")}set checked(t){Boolean(t)?this.setAttribute("checked",""):this.removeAttribute("checked")}set disabled(t){Boolean(t)?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get disabled(){return this.hasAttribute("disabled")}_onClick(t){this.checked=!this.checked,this.dispatchEvent(new CustomEvent("change",{detail:{checked:this.checked},bubbles:!0}))}}window.customElements.define("check-box",_);const j=document.createElement("template");j.innerHTML='\n<style>\n*,\n*:after,\n*:before {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n.check-boxes {\n  margin: 50px auto;\n  position: relative;\n}\n\n.check-boxes label {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: block;\n}\n\n.check-boxes input {\n  top: 0; \n  right: 0; \n  bottom: 0; \n  left: 0;\n  opacity: 0;\n  z-index: 100;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n\n.check-boxes.round {\n  width: 30px;\n  height: 30px;\n}\n\n.check-boxes.round label {\n  border-radius: 50%;\n  background: #eaeaea;\n  box-shadow: \n      0 3px 5px rgba(0,0,0,0.25),\n      inset 0 1px 0 rgba(255,255,255,0.3),\n      inset 0 -5px 5px rgba(100,100,100,0.1),\n      inset 0 5px 5px rgba(255,255,255,0.3);\n}\n\n.check-boxes.round label:after {\n  content: "";\n  position: absolute;\n  top: -8%; right: -8%; bottom: -8%; left: -8%;\n  z-index: -1;\n  border-radius: inherit;\n  background: #ddd;\n  background: linear-gradient(#ccc, #fff);\n  box-shadow: \n    inset 0 2px 1px rgba(0,0,0,0.15),\n    0 2px 5px rgba(200,200,200,0.1);\n}\n\n.check-boxes.round label:before {\n  content: "";\n  position: absolute;\n  width: 20%;\n  height: 20%;\n  border-radius: inherit;\n  left: 40%;\n  top: 40%;\n  background: #969696;\n  background: radial-gradient(40% 35%, #ccc, #969696 60%);\n  box-shadow:\n      inset 0 2px 4px 1px rgba(0,0,0,0.3),\n      0 1px 0 rgba(255,255,255,1),\n      inset 0 1px 0 white;\n}\n\n.check-boxes.round input:checked ~ label {\n  background: #dedede;\n  background: linear-gradient(#dedede, #fdfdfd);\n}\n\n.check-boxes.round input:checked ~ label:before {\n  background: #25d025;\n  background: radial-gradient(40% 35%, #5aef5a, #25d025 60%);\n  box-shadow:\n      inset 0 3px 5px 1px rgba(0,0,0,0.1),\n      0 1px 0 rgba(255,255,255,0.4),\n      0 0 10px 2px rgba(0, 210, 0, 0.5);\n}\n\n.check-boxes.switch {\n  width: 18px;\n  height: 35px;\n}\n\n.check-boxes.switch label {\n  background: #cbc7bc;\n  margin: 0 auto;\n  border-radius: 5px;\n  box-shadow:\n      inset 0 1px 0 white,\n      0 0 0 1px #999,\n      0 0 5px 1px rgba(0,0,0,0.2),\n      0 2px 0 rgba(255,255,255,0.6),\n      inset 0 10px 1px #e5e5e5,\n      inset 0 11px 0 rgba(255,255,255,0.5),\n      inset 0 -45px 3px #ddd;\n}\n\n.check-boxes.switch label:after {\n  content: "";\n  position: absolute;\n  top: -20px;\n  left: -25px;\n  bottom: -20px;\n  right: -25px;\n  background: #ccc;\n  background: linear-gradient(#ddd, #bbb);\n  z-index: -1;\n  border-radius: 5px;\n  border: 1px solid #bbb;\n  box-shadow:\n      0 0 5px 1px rgba(0,0,0,0.15),\n      0 3px 3px rgba(0,0,0,0.3),\n      inset 0 1px 0 rgba(255,255,255,0.5);\n}\n\n.check-boxes.switch input:checked ~ label {\n  background: #d2cbc3;\n  box-shadow:\n      inset 0 1px 0 white,\n      0 0 0 1px #999,\n      0 0 5px 1px rgba(0,0,0,0.2),\n      inset 0 -10px 0 #aaa,\n      0 2px 0 rgba(255,255,255,0.1),\n      inset 0 45px 3px #e0e0E0,\n      0 8px 6px rgba(0,0,0,0.18);\n}\n\n.check-boxes.tab {\n  width: 120px;\n  height: 35px;\n}\n\n.check-boxes.tab label {\n  display: block;\n  width: 100%;\n  height: 100%;\n  background: #a5a39d;\n  border-radius: 40px;\n  box-shadow:\n      inset 0 3px 8px 1px rgba(0,0,0,0.2),\n      0 1px 0 rgba(255,255,255,0.5);\n}\n\n.check-boxes.tab label:after {\n  content: "";\n  position: absolute;\n  z-index: -1;\n  top: -8px; right: -8px; bottom: -8px; left: -8px;\n  border-radius: inherit;\n  background: #ababab;\n  background: linear-gradient(#f2f2f2, #ababab);\n  box-shadow: 0 0 10px rgba(0,0,0,0.3),\n        0 1px 1px rgba(0,0,0,0.25);\n}\n\n.check-boxes.tab label:before {\n  content: "";\n  position: absolute;\n  z-index: -1;\n  top: -18px; right: -18px; bottom: -18px; left: -18px;\n  border-radius: inherit;\n  background: #eee;\n  background: linear-gradient(#e5e7e6, #eee);\n  box-shadow:\n      0 1px 0 rgba(255,255,255,0.5);\n  filter: blur(1px);\n}\n\n.check-boxes.tab label i {\n  display: block;\n  height: 100%;\n  width: 60%;\n  border-radius: inherit;\n  background: silver;\n  position: absolute;\n  z-index: 2;\n  right: 40%;\n  top: 0;\n  background: linear-gradient(#f7f2f6, #b2ac9e);\n  box-shadow:\n      inset 0 1px 0 white,\n      0 0 8px rgba(0,0,0,0.3),\n      0 5px 5px rgba(0,0,0,0.2);\n}\n\n.check-boxes.tab label i:after {\n  content: "";\n  position: absolute;\n  left: 15%;\n  top: 25%;\n  width: 70%;\n  height: 50%;\n  background: #d2cbc3;\n  background: linear-gradient(#cbc7bc, #d2cbc3);\n  border-radius: inherit;\n}\n\n.check-boxes.tab label i:before {\n  content: "off";\n  text-transform: uppercase;\n  font-style: normal;\n  font-weight: bold;\n  color: rgba(0,0,0,0.4);\n  text-shadow: 0 1px 0 #bcb8ae, 0 -1px 0 #97958e;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 15px;\n  position: absolute;\n  top: 50%;\n  margin-top: -12px;\n  right: -50%;\n}\n\n.check-boxes.tab input:checked ~ label {\n  background: #9abb82;\n}\n\n.check-boxes.tab input:checked ~ label i {\n  right: -1%;\n}\n\n.check-boxes.tab input:checked ~ label i:before {\n  content: "on";\n  right: 115%;\n  color: #82a06a;\n  text-shadow: \n    0 1px 0 #afcb9b,\n    0 -1px 0 #6b8659;\n    font-size: 15px;\n}\n\n.check-boxes.power {\n  width: 50px;\n  height: 50px;\n}\n\n.check-boxes.power label {\n  border-radius: 50%;\n  background: #b2ac9e;\n  background: linear-gradient(#f7f2f6, #b2ac9e);\n  position: relative;\n  color: #a5a39d;\n  font-size: 40px;\n  text-align: center;\n  line-height: 40px;\n\n  transition: all 0.3s ease-out;\n\n  text-shadow: 0 2px 1px rgba(0,0,0,0.25);\n\n  box-shadow:\n    inset 0 2px 3px rgba(255,255,255,0.13),\n    0 5px 8px rgba(0,0,0,0.3),\n    0 10px 10px 4px rgba(0,0,0,0.3);\n  z-index: -1;\n}\n\n.check-boxes.power label:after {\n  content: ""; \n  position: absolute;\n  left: -15px;\n  right: -15px;\n  top: -15px;\n  bottom: -15px;\n  z-index: -2;\n  border-radius: inherit;\n  box-shadow:\n    inset 0 1px 0 rgba(255,255,255,0.1),\n    0 1px 2px rgba(0,0,0,0.3),\n    0 0 10px rgba(0,0,0,0.15);\n  \n}\n\n.check-boxes.power label:before {\n  content: ""; \n  position: absolute;\n  left: -10px;\n  right: -10px;\n  top: -10px;\n  bottom: -10px;\n  z-index: -1;\n  border-radius: inherit;\n  box-shadow: inset 0 10px 10px rgba(0,0,0,0.13); \n  filter: blur(1px); \n}\n\n.check-boxes.power input:checked ~ label {\n  box-shadow:\n    inset 0 2px 3px rgba(255,255,255,0.13),\n    0 5px 8px rgba(0,0,0,0.35),\n    0 3px 10px 4px rgba(0,0,0,0.2);\n  color: #9abb82;\n} \n\n.check-boxes.power .icon-off:after {\n  content: "";\n  display: block;\n  position: absolute;\n  width: 70%;\n  height: 70%;\n  left: 50%;\n  top: 50%;\n  z-index: -1;\n  margin: -35% 0 0 -35%;\n  border-radius: 50%;\n  background: #d2cbc3;\n  background: linear-gradient(#cbc7bc, #d2cbc3);\n  box-shadow:\n    0 -2px 5px rgba(255,255,255,0.05),\n    0 2px 5px rgba(255,255,255,0.1);\n}\n.icon-off:before{ \n    content: "\\229A";\n}\n\n    </style>\n    <div class="check-boxes">\n        <input type="checkbox">\n        <label></label>\n    </div>\n  ';class G extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(j.content.cloneNode(!0))}connectedCallback(){this.initializing(),this.addEventListener("click",this._onClick),this.checked&&(this.shadowRoot.querySelector("input").checked=!0)}initializing(){this.round?this.shadowRoot.querySelector("div").classList.add("round"):this.switch?this.shadowRoot.querySelector("div").classList.add("switch"):this.tab?(this.shadowRoot.querySelector("label").innerHTML="<i></i>",this.shadowRoot.querySelector("div").classList.add("tab")):this.power&&(this.shadowRoot.querySelector("div").classList.add("power"),this.shadowRoot.querySelector("label").innerHTML='<span class="icon-off"></span>')}get round(){return this.hasAttribute("round")}get tab(){return this.hasAttribute("tab")}get switch(){return this.hasAttribute("switch")}get power(){return this.hasAttribute("power")}get checked(){return this.hasAttribute("checked")}set checked(t){Boolean(t)?this.setAttribute("checked",""):this.removeAttribute("checked")}_onClick(t){this.checked=!this.checked,this.dispatchEvent(new CustomEvent("change",{detail:{checked:this.checked},bubbles:!0}))}}window.customElements.define("custom-checkbox",G);const J=document.createElement("template");J.innerHTML='\n<style>\n    table, td, th {\n         border: 1px solid black;\n         text-align: center;\n         padding: 10px;\n    }\n    table {\n         border-collapse: collapse;\n         width: 100%;\n    }\n    th {\n         min-height: 25px;\n    }\n</style>\n<slot name="caption"></slot>\n<table>\n    <thead></thead>\n</table>\n';class W extends HTMLElement{static get observedAttributes(){return["header","data","key"]}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(J.content.cloneNode(!0))}connectedCallback(){this.table=this.shadowRoot.querySelector("table"),this.styling()}styling(){this.dark&&(this.table.style.background="#343A40",this.table.style.color="white"),this.light&&(this.table.style.background="#f9f9f9"),null!==this.background&&(this.table.style.background=this.background),null!==this.color&&(this.table.style.color=this.color),null!==this.theadbg&&(this.shadowRoot.querySelector("thead").style.background=this.theadbg,this.shadowRoot.querySelector("thead").style.color=this.theadcolor)}attributeChangedCallback(t,e,n){null!=this.header&&null!=this.data&&null!=this.key&&this.generateTable()}generateTable(){this.generateHeading(),this.generateData()}generateData(){this.tableData=JSON.parse(this.data),this.keyValues=this.key.split(","),this.table.createTBody();for(let t=0;t<this.tableData.length;t++){let e=this.table.insertRow(t),n=Object.keys(this.tableData[t]);for(let o=0;o<n.length;o++)for(let i=0;i<this.keyValues.length;i++)if(this.keyValues[i]===n[o]){e.insertCell(i).innerHTML=this.tableData[t][this.keyValues[i]]}}}generateHeading(){this.heading=this.header.split(",");for(let t=0;t<this.heading.length;t++){let e=document.createElement("th");e.innerHTML=this.heading[t],this.table.createTHead().appendChild(e)}}get data(){return this.getAttribute("data")}get header(){return this.getAttribute("header")}get key(){return this.getAttribute("key")}get background(){return this.getAttribute("background")}get color(){return this.getAttribute("color")}get dark(){return this.hasAttribute("dark")}get light(){return this.hasAttribute("light")}get theadbg(){return this.getAttribute("theadbg")}get theadcolor(){return this.getAttribute("theadcolor")}}window.customElements.define("data-table",W);const Z=document.createElement("template");Z.innerHTML='\n<style>\n    .button{\n        padding: 8px 20px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 4px 2px;\n        cursor: pointer;\n        border-radius: 3px;\n        color:#1890FF;\n        background: white;\n        border: none;\n        position: relative;\n        outline: none;\n        transition: 0.5s;\n    }\n    .button:hover{\n    color:white;\n    }\n    .button #splash{\n        content: \'\';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 0;\n        height: 0;\n        background: rgba(255, 255, 255, .2);\n        transform: translate(-50%, -50%);\n        border-radius: 50%;\n        transition: .4s ease-out;\n    }\n    .default {\n        color: var(--text-button-default-color, #000000);\n    }\n    .default:hover{\n        background: var(--text-button-default-background, #000000);\n\n    }\n    .primary {\n        color: var(--text-button-primary-color, #337AB7);\n    }\n    .primary:hover{\n        background: var(--text-button-primary-background, #337AB7);\n\n    }\n    .secondary {\n        color: var(--text-button-secondary-color, #6C757D);\n    }\n    .secondary:hover{\n        background: var(--text-button-secondary-background, #6C757D);\n\n    }\n    .info {\n        color: var(--text-button-info-color, #5BC0DE);\n    }\n    .info:hover{\n        background: var(--text-button-info-background, #5BC0DE);\n\n    }\n    .warning {\n        color: var(--text-button-warning-color, #F0AD4E);\n    }\n    .warning:hover{\n        background: var(--text-button-warning-background, #F0AD4E);\n\n    }\n    .success {\n        color:  var(--text-button-success-color, #5CB85C);\n    }\n    .success:hover{\n        background: var(--text-button-success-background, #5CB85C);\n\n    }\n    .danger {\n         color:  var(--text-button-success-background, #D9534F);\n    }\n    .danger:hover{\n        background: var(--text-button-danger-background, #D9534F);\n    }\n    .disable {\n        pointer-events: none;\n        opacity: 0.4;\n    }\n</style>\n <div class="button">\n    <span></span>\n    <div id="splash"></div>\n</div> ';class X extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(Z.content.cloneNode(!0))}connectedCallback(){this.btnTypes=["primary","secondary","info","success","warning","danger"],this.shadowRoot.querySelector(".button").classList.add(this.is),this.shadowRoot.querySelector("span").innerText=this.content,this.shadowRoot.querySelector(".button").addEventListener("click",this.splashEffect.bind(this)),this.disable&&this.shadowRoot.querySelector(".button").classList.add("disable")}splashEffect(){let t=this.shadowRoot.querySelector("#splash");t.style.width="100%",t.style.height="50px",setTimeout((function(){t.style.opacity="0"}),200),setTimeout((function(){t.style.transitionDuration="0s"}),1e3),setTimeout((function(){t.style.width="0",t.style.height="0",t.style.opacity="1"}),1100),setTimeout((function(){t.style.transitionDuration=".3s"}),1200)}get is(){let t="default";if(this.hasAttribute("is")){let e=this.getAttribute("is");-1!==this.btnTypes.indexOf(e)&&(t=e)}return t}get content(){return this.getAttribute("content")}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("text-button",X);const $=document.createElement("template");$.innerHTML='\n<style>\n    .button {\n        position: relative;\n        border: none;\n        padding: 12px 20px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        cursor: pointer;\n        color: white;\n        float: left;\n        outline: none;\n    }\n    .button #splash{\n        content: \'\';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 0;\n        height: 0;\n        background: rgba(255, 255, 255, .2);\n        transform: translate(-50%, -50%);\n        border-radius: 50%;\n        transition: .4s ease-out;\n    }\n    .default {\n        border: var(--btn-group-default-border, 1px solid black);\n        background: var(--btn-group-default-background, #000000);\n    }\n\n    .default:hover {\n        background: var(--btn-group-default-background-hover, #000000);\n    }\n\n    .primary {\n        border-left: var(--btn-group-primary-border-left, 1px solid #2d6a9f);\n        border-right: var(--btn-group-primary-border-right, 1px solid #2d6a9f);\n        background: var(--btn-group-primary-background, #337AB7);\n    }\n\n    .primary:hover {\n        background: var(--btn-group-primary-background-hover, #2d6a9f);\n    }\n\n    .secondary {\n        border-left: var(--btn-group-secondary-border-left, 1px solid #5f666d);\n        border-right: var(--btn-group-secondary-border-right, 1px solid #5f666d);\n        background: var(--btn-group-secondary-background, #6C757D);\n    }\n\n    .secondary:hover {\n        background: var(--btn-group-secondary-background-hover, #5f666d);\n    }\n\n    .info {\n        border-right: var(--btn-group-info-border-left, 1px solid #41b5d8);\n        border-left: var(--btn-group-info-border-right, 1px solid #41b5d8);\n        background: var(--btn-group-info-background, #5BC0DE);\n    }\n\n    .info:hover {\n        background: var(--btn-group-info-hover-background, #41b5d8);\n    }\n\n    .warning {\n        border-right: var(--btn-group-warning-border-left, 1px solid #ed9c2c);\n        border-left: var(--btn-group-warning-border-right, 1px solid #ed9c2c);\n        background: var(--btn-group-warning-background, #F0AD4E);\n    }\n\n    .warning:hover {\n        background: var(--btn-group-warning-hover-background, #ed9c2c);;\n    }\n\n    .success {\n        border-right: var(--btn-group-success-border-left, 1px solid #46a046);\n        border-left: var(--btn-group-success-border-right, 1px solid #46a046);\n        background: var(--btn-group-success-background, #5CB85C);\n    }\n\n    .success:hover {\n        background: var(--btn-group-success-hover-background, #46a046);\n    }\n\n    .danger {\n        border-right: var(--btn-group-danger-border-left, 1px solid #d1332e);\n        border-left: var(--btn-group-danger-border-right, 1px solid #d1332e);\n        background: var(--btn-group-danger-background, #D9534F);\n    }\n\n    .danger:hover {\n        background: var(--btn-group-danger-hover-background, #d1332e);\n    }\n    .disable {\n        pointer-events: none;\n        opacity: 0.4;\n    }\n</style>\n\n<div class="button">\n    <slot name="icon"></slot>\n    <span></span>\n    <div id="splash"></div>\n</div>\n';class K extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild($.content.cloneNode(!0))}connectedCallback(){this.btnTypes=["primary","secondary","info","success","warning","danger"],this.shadowRoot.querySelector(".button").classList.add(this.is),this.shadowRoot.querySelector("slot[name=icon]"),this.setInnerHtml(),this.shadowRoot.querySelector(".button").addEventListener("click",this.splashEffect.bind(this)),this.disable&&this.shadowRoot.querySelector(".button").classList.add("disable")}splashEffect(){let t=this.shadowRoot.querySelector("#splash");t.style.width="100%",t.style.height="50px",setTimeout((function(){t.style.opacity="0"}),200),setTimeout((function(){t.style.transitionDuration="0s"}),1e3),setTimeout((function(){t.style.width="0",t.style.height="0",t.style.opacity="1"}),1100),setTimeout((function(){t.style.transitionDuration=".3s"}),1200)}get is(){let t="default";if(this.hasAttribute("is")){let e=this.getAttribute("is");-1!==this.btnTypes.indexOf(e)&&(t=e)}return t}get content(){return this.getAttribute("content")}setInnerHtml(){null!=this.content&&(this.shadowRoot.querySelector("span").innerHTML=this.content)}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("btn-group",K);const Q=document.createElement("template");Q.innerHTML='<slot name="button"></slot>';class Y extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(Q.content.cloneNode(!0))}}window.customElements.define("button-group",Y);const tt=document.createElement("template");tt.innerHTML='\n<style>\n    .button{\n        position: relative;\n        border: none;\n        padding: 8px 20px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 4px 2px;\n        cursor: pointer;\n        border-radius: 3px;\n        color:white;\n        outline: none;\n    }\n    .button #splash{\n        content: \'\';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 0;\n        height: 0;\n        background: rgba(255, 255, 255, .2);\n        transform: translate(-50%, -50%);\n        border-radius: 50%;\n        transition: .4s ease-out;\n    }\n    .default {\n        border: 1px solid black;\n        background: var(--flat-button-default-background, #000000);\n    }\n    .primary {\n        background: var(--flat-button-primary-background, #337AB7);\n    }\n    .secondary {\n        background:var(--flat-button-secondary-background, #6C757D) ;\n    }\n    .info {\n        background:var(--flat-button-info-background, #5BC0DE) ;\n    }\n    .warning {\n        background:var(--flat-button-warning-background, #F0AD4E) ;\n    }\n    .success {\n        background:var(--flat-success-background, #5CB85C) ;\n    }\n    .danger {\n        background:var(--flat-button-danger-background, #D9534F) ;\n    }\n    .disable {\n        pointer-events: none;\n        opacity: 0.4;\n    }\n</style>\n<div class="button">\n    <span></span>\n    <div id="splash"></div>\n</div>\n  ';class et extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(tt.content.cloneNode(!0))}connectedCallback(){this.btnTypes=["primary","secondary","info","success","warning","danger"],this.shadowRoot.querySelector(".button").classList.add(this.is),this.shadowRoot.querySelector("span").innerText=this.content,this.shadowRoot.querySelector(".button").addEventListener("click",this.splashEffect.bind(this)),this.disable&&this.shadowRoot.querySelector(".button").classList.add("disable")}splashEffect(){let t=this.shadowRoot.querySelector("#splash");t.style.width="100%",t.style.height="50px",setTimeout((function(){t.style.opacity="0"}),200),setTimeout((function(){t.style.transitionDuration="0s"}),1e3),setTimeout((function(){t.style.width="0",t.style.height="0",t.style.opacity="1"}),1100),setTimeout((function(){t.style.transitionDuration=".3s"}),1200)}get is(){let t="default";if(this.hasAttribute("is")){let e=this.getAttribute("is");-1!==this.btnTypes.indexOf(e)&&(t=e)}return t}get content(){return this.getAttribute("content")}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("flat-button",et);const nt=document.createElement("template");nt.innerHTML='\n<style>\n    .button{\n        position: relative;\n    }\n    button{\n          height: 50px;\n          width: 50px;\n          padding-top: 5px;\n          cursor: pointer;\n          text-decoration: none;\n          color:white;\n    }\n     button:focus{\n        outline: none;\n    }\n    .button #splash{\n        content: \'\';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 0;\n        height: 0;\n        background: rgba(255, 255, 255, .2);\n        transform: translate(-50%, -50%);\n        border-radius: 50%;\n        transition: .3s ease-out;\n    }\n    .trueRound{\n          border-radius: 50%;\n    }\n    .trueShadow{\n        box-shadow: 0 0 10px #d9d9d9;\n    }\n    .default {\n        background: var(--floating-button-default-background, #000000);\n        color: var(--floating-default-color, white)\n    }\n    .dark{\n        background: black;\n    }\n    .light{\n        background: white;\n        border: 1px solid black;\n        color:black;\n    }\n    .disable {\n        pointer-events: none;\n        opacity: 0.4;\n    }\n</style>\n<span class="button">\n    <button>\n        <slot name="icon"></slot>\n    </button>\n    <div id="splash"></div>\n</span>\n  ';class ot extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(nt.content.cloneNode(!0))}connectedCallback(){this.btnTypes=["dark","light"],this.shadowRoot.querySelector("button").classList.add(this.is),this.shadowRoot.querySelector("slot[name=icon]"),this.shadowRoot.querySelector("button").classList.add(this.round+"Round"),this.shadowRoot.querySelector("button").classList.add(this.shadow+"Shadow"),this.shadowRoot.querySelector("button").addEventListener("click",this.splashEffect.bind(this)),this.disable&&this.shadowRoot.querySelector("button").classList.add("disable")}splashEffect(){let t=this.shadowRoot.querySelector("#splash");t.style.width="50px",t.style.height="50px",setTimeout((function(){t.style.opacity="0"}),400),setTimeout((function(){t.style.transitionDuration="0s"}),1e3),setTimeout((function(){t.style.width="0",t.style.height="0",t.style.opacity="1"}),1100),setTimeout((function(){t.style.transitionDuration=".3s"}),1200)}get is(){let t="default";if(this.hasAttribute("is")){let e=this.getAttribute("is");-1!==this.btnTypes.indexOf(e)&&(t=e)}return t}get icon(){return this.getAttribute("icon")}get round(){return this.hasAttribute("round")}set round(t){t?this.setAttribute("round",""):this.removeAttribute("round")}get shadow(){return this.hasAttribute("shadow")}set shadow(t){t?this.setAttribute("shadow",""):this.removeAttribute("shadow")}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("floating-button",ot);const it=document.createElement("template");it.innerHTML='\n<style>\n    .button{\n        border: 1px solid black;\n        background: transparent;\n        color: black;\n        padding: 8px 20px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 4px 2px;\n        cursor: pointer;\n        border-radius: 3px;\n        transition: background 0.3s, color 0.3s;\n        position: relative;\n        outline: none;\n    }\n    .button #splash{\n        content: \'\';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 0;\n        height: 0;\n        background: rgba(255, 255, 255, .2);\n        transform: translate(-50%, -50%);\n        border-radius: 50%;\n        transition: .4s ease-out;\n    }\n    .button:hover{\n        color:white;\n    }\n    .default {\n        border-color: var(--outline-button-default-border-color, #000000);\n        color: var(--outline-button-default-color, #000000);\n    }\n    .default:hover{\n        background: var(--outline-button-default-background, #000000);\n\n    }\n    .primary {\n        border-color: var(--outline-button-primary-border-color, #337AB7);\n        color: var(--outline-button-primary-color, #337AB7);\n    }\n    .primary:hover{\n        background: var(--outline-button-primary-background, #337AB7);\n\n    }\n    .secondary {\n        border-color: var(--outline-button-secondary-border-color, #6C757D);\n        color: var(--outline-button-secondary-color, #6C757D);\n    }\n    .secondary:hover{\n        background: var(--outline-button-secondary-backgroud, #6C757D);\n\n    }\n    .info {\n        border-color: var(--outline-button-info-border-color, #5BC0DE);\n        color: var(--outline-button-info-color, #5BC0DE);\n    }\n    .info:hover{\n        background: var(--outline-button-info-background, #5BC0DE);\n\n    }\n    .warning {\n        border-color: var(--outline-button-warning-border-color, #F0AD4E);\n        color: var(--outline-button-warning-color, #F0AD4E);\n    }\n    .warning:hover{\n        background: var(--outline-button-warning-background, #F0AD4E);\n\n    }\n    .success {\n        border-color: var(--outline-button-success-border-color, #5CB85C);\n        color:  var(--outline-button-success-color, #5CB85C);\n    }\n    .success:hover{\n        background: var(--outline-button-success-background, #5CB85C);\n\n    }\n    .danger {\n        border-color: var(--outline-button-danger-border-color, #D9534F);\n        color: var(--outline-button-danger-color, #D9534F);\n    }\n    .danger:hover{\n        background: var(--outline-button-danger-background, #D9534F);\n    }\n    .disable {\n        pointer-events: none;\n        opacity: 0.4;\n    }\n</style>\n <div class="button">\n    <span></span>\n    <div id="splash"></div>\n</div>\n     ';class st extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(it.content.cloneNode(!0))}connectedCallback(){this.btnTypes=["primary","secondary","info","success","warning","danger"],this.shadowRoot.querySelector(".button").classList.add(this.is),this.shadowRoot.querySelector("span").innerText=this.content,this.shadowRoot.querySelector(".button").addEventListener("click",this.splashEffect.bind(this)),this.disable&&this.shadowRoot.querySelector(".button").classList.add("disable")}splashEffect(){let t=this.shadowRoot.querySelector("#splash");t.style.width="100%",t.style.height="50px",setTimeout((function(){t.style.opacity="0"}),200),setTimeout((function(){t.style.transitionDuration="0s"}),1e3),setTimeout((function(){t.style.width="0",t.style.height="0",t.style.opacity="1"}),1100),setTimeout((function(){t.style.transitionDuration=".3s"}),1200)}get is(){let t="default";if(this.hasAttribute("is")){let e=this.getAttribute("is");-1!==this.btnTypes.indexOf(e)&&(t=e)}return t}get content(){return this.getAttribute("content")}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("outline-button",st);const rt=document.createElement("template");rt.innerHTML='\n<style>\n    .button{\n        position: relative;\n        border: none;\n        padding: 8px 20px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 4px 2px;\n        cursor: pointer;\n        border-radius: 3px;\n        color:white;\n        box-shadow: 0 0 6px #999;  \n        outline: none;   \n    }\n    .button #splash{\n        content: \'\';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 0;\n        height: 0;\n        background: rgba(255, 255, 255, .2);\n        transform: translate(-50%, -50%);\n        border-radius: 50%;\n        transition: .4s ease-out;\n    }\n    .default {\n        border: 1px solid black;\n        background: var(--raised-button-default-background, #000000);\n    }\n    .primary {\n        background: var(--raised-button-primary-background, #337AB7);\n    }\n    .secondary {\n        background:var(--raised-button-secondary-background, #6C757D) ;\n    }\n    .info {\n        background:var(--raised-button-info-background, #5BC0DE) ;\n    }\n    .warning {\n        background:var(--raised-button-warning-background, #F0AD4E) ;\n    }\n    .success {\n        background:var(--raised-button-success-background, #5CB85C) ;\n    }\n    .danger {\n        background:var(--raised-button-danger-background, #D9534F) ;\n    }\n    .disable {\n        pointer-events: none;\n        opacity: 0.4;\n    }\n</style>\n<div class="button">\n    <span></span>\n    <div id="splash"></div>\n</div>\n     ';class at extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(rt.content.cloneNode(!0))}connectedCallback(){this.btnTypes=["primary","secondary","info","success","warning","danger"],this.shadowRoot.querySelector(".button").classList.add(this.is),this.shadowRoot.querySelector("span").innerText=this.content,this.shadowRoot.querySelector(".button").addEventListener("click",this.splashEffect.bind(this)),this.disable&&this.shadowRoot.querySelector(".button").classList.add("disable")}splashEffect(){let t=this.shadowRoot.querySelector("#splash");t.style.width="100%",t.style.height="50px",setTimeout((function(){t.style.opacity="0"}),200),setTimeout((function(){t.style.transitionDuration="0s"}),1e3),setTimeout((function(){t.style.width="0",t.style.height="0",t.style.opacity="1"}),1100),setTimeout((function(){t.style.transitionDuration=".3s"}),1200)}get is(){let t="default";if(this.hasAttribute("is")){let e=this.getAttribute("is");-1!==this.btnTypes.indexOf(e)&&(t=e)}return t}get content(){return this.getAttribute("content")}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("raised-button",at);const lt=document.createElement("template");lt.innerHTML="\n<style>\n    button{\n        padding: 12px 20px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 4px 2px;\n        cursor: pointer;\n        border-radius: 3px;\n        color:#1890FF;\n        background: white;\n        border: none;\n        outline: none;\n    }\n    .disable {\n        pointer-events: none;\n        opacity: 0.4;\n    }\n</style>\n<button></button>\n  ";class dt extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(lt.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("button").innerHTML=this.content,this.disable&&this.shadowRoot.querySelector("button").classList.add("disable")}get content(){return this.getAttribute("content")}get disable(){return this.hasAttribute("disable")}set disable(t){t?this.setAttribute("disable",""):this.removeAttribute("disable")}}window.customElements.define("link-button",dt);const ht=document.createElement("template");ht.innerHTML='\n<div>\n    <slot name="header"></slot>\n    <slot name="body"></slot>\n</div>\n<style>\n   div{\n   border: 1px solid #EEEEEE;\n   padding: 10px;\n   margin: 10px;\n   min-height: 110px;\n   }\n    .default {\n        border-left:3px solid black;\n    }\n    .primary {\n        border-left:3px solid #337AB7;\n    }\n    .secondary {\n        border-left:3px solid #6C757D;\n    }\n    .info {\n        border-left:3px solid #5BC0DE;\n    }\n    .warning {\n        border-left:3px solid #F0AD4E;\n    }\n    .success {\n        border-left:3px solid #5CB85C;\n    }\n    .danger {\n        border-left:3px solid #D9534F;\n    }\n</style>\n';class ct extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(ht.content.cloneNode(!0))}connectedCallback(){this.colors=["primary","secondary","info","success","warning","danger"],this.headerColors=["#337AB7","#6C757D","#5BC0DE","#5CB85C","#F0AD4E","#D9534F"],this.shadowRoot.querySelector("div").classList.add(this.is),this.styleHeading()}styleHeading(){for(let t=0;t<this.colors.length;t++)if(this.colors[t]===this.is){let e=this.headerColors[t];this.shadowRoot.querySelector('slot[name="header"]').style.color=e}}get is(){let t="default";if(this.hasAttribute("is")){let e=this.getAttribute("is");-1!==this.colors.indexOf(e)&&(t=e)}return t}}window.customElements.define("call-out",ct);const ut=document.createElement("template");ut.innerHTML='\n<style>\n    div{\n        display:flex;\n    }\n</style>\n<div>\n    <slot name="notice"></slot>\n</div>\n  ';class pt extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(ut.content.cloneNode(!0))}}window.customElements.define("notice-board",pt);const bt=document.createElement("template");bt.innerHTML='\n<style>\n    .slider {\n        margin-top: 30px;\n        border-radius: 3px;\n        height: 90px;\n        width: 0;\n        position: fixed;\n        z-index: 100;\n        top: 0;\n        right: -40px;\n        overflow: hidden;\n        transition: 0.5s;\n        border: 1px solid rgba(0,0,0,0.05);\n        box-shadow: 0 0 7px 1px rgba(0,0,0,0.07);\n        padding: 3px 10px;\n        border-left:4px solid black; \n        background: white;\n        color: rgba(0,0,0,0.73);\n    }\n    .cross{\n        position: relative;\n        color: #000;\n        float: right;\n    }\n    .cross-span{\n        position: absolute;\n        top: -50px;\n        right:5px;\n        text-shadow: 2px 2px rgba(0,0,0,0.05);\n        cursor: pointer;\n        transition: 0.2s;\n    }\n    .cross-span:hover{\n        color: #e50000;\n        font-size: 17px;\n    }\n    .text{\n        display: inline;\n    }\n    ::slotted([slot="icon"]){\n        width: 20%;\n        height: 80%;\n        float: left;\n        font-size: calc(3vw + 3vh);\n        padding: 10px;\n        margin: 0;\n    }\n</style>\n<div class="container">\n    <slot name="button"></slot>\n    <div class="slider">\n        <slot name="icon"></slot>\n        <h3 class="heading"></h3>\n        <p class="text"></p>\n        <div class="cross">\n            <span class="cross-span">&#10006;</span>\n        </div>\n    </div>\n</div>\n  ';class gt extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(bt.content.cloneNode(!0))}connectedCallback(){this.colorList=["primary","secondary","info","success","warning","danger"],this.colors=["#337AB7","#6C757D","#5BC0DE","#5CB85C","#F0AD4E","#D9534F"],this.notification=0,this.shadowRoot.querySelector("h3").innerHTML=this.header,this.shadowRoot.querySelector("p").innerHTML=this.body,this.shadowRoot.querySelector("slot[name=button]").addEventListener("click",this.showHideNotice.bind(this),!1),this.SliderStyle(),this.autoClose(),this.shadowRoot.querySelector(".cross-span").addEventListener("click",this.closeSlide.bind(this),!1)}showHideNotice(){if(0===this.notification){this.shadowRoot.querySelector(".slider").style.width="350px",this.shadowRoot.querySelector(".slider").style.right="0";let t=this;setTimeout((function(){t.shadowRoot.querySelector(".slider").style.width="320px"}),400),this.notification=1}else this.closeSlide()}autoClose(){if(this.autoclose){setTimeout(this.closeSlide.bind(this),5e3)}}closeSlide(){this.shadowRoot.querySelector(".slider").style.width="0",this.shadowRoot.querySelector(".slider").style.right="-40px",this.notification=0}SliderStyle(){for(let t=0;t<this.colorList.length;t++)if(this.colorList[t]===this.is){let e=this.colors[t];this.shadowRoot.querySelector(".slider").style.borderLeftColor=e}}get is(){let t="default";if(this.hasAttribute("is")){let e=this.getAttribute("is");-1!==this.colorList.indexOf(e)&&(t=e)}return t}get header(){return this.getAttribute("header")}get body(){return this.getAttribute("body")}get autoclose(){return this.hasAttribute("autoclose")}}window.customElements.define("notice-sliding",gt);const mt=document.createElement("template");mt.innerHTML='\n<style>\n    .container{\n       padding: 0;\n       width: 96%;\n       border: 1px solid rgba(0,0,0,0.22)!important;\n    }\n    .text{\n        margin:1px 2%;\n        display: flex;\n    }\n    .text p{\n        display: inline-block;\n        margin:5px;\n        padding: 10px;\n        transition: 0.1s all;\n        width:80%\n    }\n    .text span{\n       text-align: center;\n       width: 8%;\n       opacity: 0.5;\n       cursor: pointer;\n       font-size: 20px;\n       margin:5px;\n       padding: 5px;\n       border-radius: 4px;\n       display: none;\n       transition: 0.1s all;\n    }\n    .text span:hover{\n        background: rgba(0,0,0,0.22);\n    }\n    .edit-form{\n        display: flex;\n        padding:5px 2% ;\n        position: relative;\n    }\n    .processing{\n        padding:2px 2%;\n        text-align: center;\n    }\n    .loading {\n        display: inline-block;\n        width: 40px;\n        height: 40px;\n    }\n    .loading:after {\n        content: " ";\n        display: block;\n        width: 27px;\n        height: 27px;\n        margin: 1px;\n        border-radius: 50%;\n        border-width: 5px;\n        border-style: solid;\n        border-color: #fff black #fff black;\n        animation: loading 1.2s linear infinite;\n    }\n    @keyframes loading {\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n    form {\n        display: inline;\n    }\n    input[type=text] {\n        padding: 12px 20px;\n        box-sizing: border-box;\n        width: 90%;\n        border: 1px solid rgba(0,0,255,0.68);\n        display: inline-block;\n    }\n    .submit-form, .cancel{\n        font-weight: bold;\n        cursor: pointer;\n        text-shadow: 2px 2px rgba(0,0,0,0.21);\n        background: white;\n        border: none;\n    }\n    .submit-form{\n        font-size: 23px;    \n    }  \n    .cancel{\n        color: red;\n        position: absolute;\n        top: 5px;\n        right: -15px;\n    }\n    .error{\n        color:rgba(233,22,14,0.82);\n        font-size: 20px;\n        padding-left: 17px;\n    }\n    .error span{\n        padding-left:10px ;\n    }\n    .actions{\n        display: flex;\n    }\n    .actions div{\n        padding:5px 10px;\n        margin:0 5px;\n        cursor: pointer;\n    }\n    .saved{\n        color:green;\n        padding-left: 10px;\n    }\n </style>\n<div class="container">\n    <div class="text">\n        <p></p>\n        <span>&#9998;</span>\n    </div>\n    <div class="edit-form">\n        <form id="input-form">\n          <input type="text">\n          <button type="submit" class="submit-form">&#x1f4be;</button>\n        </form>\n        <div class="processing">\n            <span class="loading"></span>\n        </div>\n        <button class="cancel">&#10060;</button>\n        <div class="error-messages">\n            <div class="error">\n                 &#x26a0;<span class="error-status"></span>\n            </div>\n            <div class="actions">\n                <div class="abort">&#10060; abort</div>\n                <div class="retry" type="submit">&#x1f4be; Retry</div>\n                <div class="edit">&#9998; Edit</div>\n            </div>\n        </div>\n    </div>\n</div>\n<p class="saved">Saved Successfully</p>\n\n  ';class yt extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(mt.content.cloneNode(!0))}connectedCallback(){this.initialization(),this.text.querySelector("p").innerHTML=this.message,this.inputForm.method=this.method,this.inputForm.setAttribute("api",this.api),this.editForm.style.display="none",this.submitForm.style.display="none",this.processing.style.display="none",this.errorMessage.style.display="none",this.shadowRoot.querySelector(".saved").style.display="none",this.setEvents()}initialization(){this.inputForm=this.shadowRoot.querySelector("form"),this.editForm=this.shadowRoot.querySelector(".edit-form"),this.text=this.shadowRoot.querySelector(".text"),this.submitForm=this.shadowRoot.querySelector(".submit-form"),this.processing=this.shadowRoot.querySelector(".processing"),this.cancel=this.shadowRoot.querySelector(".cancel"),this.errorMessage=this.shadowRoot.querySelector(".error-messages"),this.error=this.shadowRoot.querySelector(".error"),this.action=this.shadowRoot.querySelector(".action"),this.inputField=this.shadowRoot.querySelector("input")}setEvents(){this.inputForm.addEventListener("submit",this.submit.bind(this),!1),this.cancel.addEventListener("click",this.hide.bind(this),!1),this.addEventListener("mouseover",this.showEditor),this.addEventListener("mouseout",this.hideEditor),this.shadowRoot.querySelector("span").addEventListener("mouseover",this.editHover.bind(this),!1),this.shadowRoot.querySelector("span").addEventListener("mouseout",this.editHoverOut.bind(this),!1),this.shadowRoot.querySelector("span").addEventListener("click",this.editCard.bind(this),!1),this.shadowRoot.querySelector("input").addEventListener("keyup",this.showSaveButton.bind(this),!1)}submit(t){t.preventDefault();let e=this.inputField.value,n=this.inputForm.getAttribute("api"),o=this.inputForm.getAttribute("method"),i=this.text.querySelector("p").innerHTML,s=this;i!=e&&(this.processing.style.display="block",this.inputForm.style.display="none",fetch(n,{method:o,body:e}).then(t=>{s.response(t)}))}response(t){if(this.processing.style.display="none",200===t.status){this.shadowRoot.querySelector(".saved").style.display="inline",this.shadowRoot.querySelector(".loading").style.display="none",this.cancel.style.display="none",this.text.style.display="flex",this.editForm.style.display="none",this.text.querySelector("p").innerHTML=this.inputField.value;let t=this;setTimeout((function(){t.shadowRoot.querySelector(".saved").style.display="none"}),2e3)}else{this.inputForm.style.display="inline",this.submitForm.style.display="none",this.cancel.style.display="none",this.errorMessage.style.display="inline";let e=t.statusText;this.shadowRoot.querySelector(".error-status").innerHTML=e;let n=this.shadowRoot.querySelector(".actions");n.querySelector(".abort").addEventListener("click",this.abort.bind(this),!1),n.querySelector(".retry").addEventListener("click",this.retry.bind(this),!1),n.querySelector(".edit").addEventListener("click",this.edit.bind(this),!1)}}abort(){this.text.style.display="flex",this.editForm.style.display="none",this.errorMessage.style.display="none",this.cancel.style.display="inline"}retry(t){this.errorMessage.style.display="none",this.inputForm.style.display="none",this.processing.style.display="block",this.submit(t)}edit(){this.errorMessage.style.display="none",this.submitForm.style.display="inline",this.cancel.style.display="inline"}hide(){this.text.style.display="flex",this.editForm.style.display="none",this.submitForm.style.display="none"}editCard(){this.editForm.style.display="block",this.inputForm.style.display="block",this.text.style.display="none",this.submitForm.style.display="none",this.cancel.style.display="inline",this.inputField.value=this.text.querySelector("p").innerHTML}editHover(){this.text.querySelector("p").style.border="1px dotted blue"}editHoverOut(){this.text.querySelector("p").style.border="none"}showEditor(){this.shadowRoot.querySelector("span").style.display="block"}hideEditor(){this.shadowRoot.querySelector("span").style.display="none"}showSaveButton(t){"Enter"!==t.key&&(this.submitForm.style.display="inline")}get method(){return this.getAttribute("method")}get api(){return this.getAttribute("api")}get message(){return this.getAttribute("message")}}window.customElements.define("line-card",yt);const xt=document.createElement("template");xt.innerHTML='\n<style>\n    .alert{\n         width: var(--alert-message-width, 90%);\n         padding: 20px;\n         background-color: #f44336;\n         color: white;\n         margin-bottom: 15px;\n         transition: 0.5s ease-in;\n         position: relative;\n    }\n    .close-btn {\n         position: absolute;\n         right:20px;\n         top: 20px;\n         color: white;\n         font-weight: bold;\n         font-size: 22px;\n         line-height: 20px;\n         cursor: pointer;\n         transition: 0.3s;\n    }\n    .close-btn:hover{\n        color:#df0000;\n    }\n    .default {\n        background: var(--alert-message-default-background, #D6D8D9);\n        color: var(--alert-message-default-color, black);\n    }\n    .primary {\n        background: var(--alert-message-primary-background, #CCE5FF);\n        color: var(--alert-message-primary-color, #337AB7);\n    }\n    .secondary {\n        background:var(--alert-message-secondary-background, #E2E3E5);\n        color: var(--alert-message-secondary-color, #6C757D);\n    }\n    .info {\n        background:var(--alert-message-info-background, #D1ECF1);\n        color: var(--alert-message-info-color, #5BC0DE);\n    }\n    .warning {\n        background:var(--alert-message-warning-background, #FFF3CD);\n        color: var(--alert-message-warning-color, #F0AD4E);\n    }\n    .success {\n        background:var(--alert-message-success-background, #D4EDDA);\n        color: var(--alert-message-success-color, #5CB85C);\n    }\n    .danger {\n        background:var(--alert-message-danger-background, #F8D7DA);\n        color: var(--alert-message-danger-color, #D9534F);\n    }\n</style>\n\n<div class="alert">\n  <slot name="message"></slot>\n  <span class="close-btn">&times;</span>\n</div>\n  ';class wt extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(xt.content.cloneNode(!0))}connectedCallback(){this.alertTypes=["primary","secondary","info","success","warning","danger"],this.shadowRoot.querySelector("div").classList.add(this.is),this.shadowRoot.querySelector("slot[name=message]"),this.shadowRoot.querySelector("span").addEventListener("click",this.closeMessage.bind(this))}closeMessage(){this.shadowRoot.querySelector(".alert").style.width="0";let t=this;setTimeout((function(){t.shadowRoot.querySelector(".alert").style.display="none"}),400)}get is(){let t="default";if(this.hasAttribute("is")){let e=this.getAttribute("is");-1!==this.alertTypes.indexOf(e)&&(t=e)}return t}}window.customElements.define("alert-message",wt);const ft=document.createElement("template");ft.innerHTML="\n<style>\n   a{\n     color: #000;\n     text-decoration: none;\n   }\n  \n</style>\n<a>\n<slot></slot>\n</a>\n  ";class vt extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(ft.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("a").setAttribute("href",this.href),this.shadowRoot.querySelector("a").setAttribute("target","_top"),null!==this.color&&(this.shadowRoot.querySelector("a").style.color=this.color),null!==this.target&&this.shadowRoot.querySelector("a").setAttribute("target",this.target)}get href(){return this.getAttribute("href")}get color(){return this.getAttribute("color")}get target(){return this.getAttribute("target")}}window.customElements.define("a-href",vt);const kt=document.createElement("template");kt.innerHTML='\n\n<div>\n    <slot></slot>\n    <slot name="submit"></slot>\n    <p style="color: green" id="message"></p>\n</div>\n  ';class St extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(kt.content.cloneNode(!0))}connectedCallback(){this.allFields=["INPUT-TEXT","INPUT-NUMBER","EMAIL-ADDRESS","INPUT-PASSWORD","AUTOGROW-TEXTAREA"],this.formData=[],this.shadowRoot.querySelector('slot[name="submit"]').addEventListener("click",this.inputValues.bind(this))}inputValues(){this.allChild=this.children;for(let t=0;t<this.allChild.length;t++)for(let e=0;e<this.allFields.length;e++)if(this.allChild[t].tagName===this.allFields[e]&&"false"!==this.allChild[t].getAttribute("valid")){let e={},n=this.allChild[t].getAttribute("name"),o=this.allChild[t].value;e[n]=o,this.formData.push(e),null!==this.api||null!==this.method?this.submitForm():this.setAttribute("data",JSON.stringify(this.formData))}}submitForm(){fetch(this.api,{method:this.method,body:JSON.stringify(this.formData)}).then(t=>t.json()).then(t=>{this.shadowRoot.querySelector("#message").innerHTML="Form submitted successfully";let e=this;setTimeout((function(){e.shadowRoot.querySelector("#message").innerHTML=""}),2e3)})}get api(){return this.getAttribute("api")}get method(){return this.getAttribute("method")}}window.customElements.define("submit-form",St);const Rt=document.createElement("template");Rt.innerHTML="\n<style>\n    .xl{\n        font-size: 40px;\n    }\n   .lg{\n        font-size: 30px;\n   }\n   .md{\n        font-size: 25px;\n   }\n   .sm{\n        font-size: 16px;\n   }\n   .xsm{\n        font-size: 14px;\n   }\n</style>\n<p>\n<slot></slot>\n</p>\n  ";class Et extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(Rt.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("p").classList.add(this.display),this.shadowRoot.querySelector("p").style.color=this.color,this.center&&(this.shadowRoot.querySelector("p").style.textAlign="center"),this.shadowRoot.querySelector("p").style.color=this.color}get display(){return this.getAttribute("display")}get color(){return this.getAttribute("color")}get center(){return this.hasAttribute("center")}}window.customElements.define("heading-text",Et);const qt=document.createElement("template");qt.innerHTML='\n    <style>\n    input{\n      width: 15px; \n      height: 15px;\n      margin-top: 15px;\n      margin-right: 10px;\n      cursor: pointer;\n}\n</style>\n        <input type="checkbox">\n    <slot></slot>\n  ';class At extends HTMLElement{static get observedAttributes(){return["checked"]}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(qt.content.cloneNode(!0))}connectedCallback(){this.shadowRoot.querySelector("input").checked=this.checked,this.shadowRoot.querySelector("input").disabled=this.disabled,this.addEventListener("click",this._onClick)}attributeChangedCallback(t,e,n){this.shadowRoot.querySelector("input").checked=this.checked}get checked(){return this.hasAttribute("checked")}set checked(t){t?this.setAttribute("checked",""):this.removeAttribute("checked")}set disabled(t){t?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get disabled(){return this.hasAttribute("disabled")}_onClick(t){this.checked=!this.checked,this.dispatchEvent(new CustomEvent("change",{detail:{checked:this.checked},bubbles:!0}))}}window.customElements.define("radio-button",At);const Lt=document.createElement("template");Lt.innerHTML="\n<div>\n<slot></slot>\n</div>\n  ";class Tt extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(Lt.content.cloneNode(!0))}connectedCallback(){const t=function(t,e){for(let e of t){let t=this.querySelectorAll("radio-button");for(let e=0;e<t.length;e++)t[e].shadowRoot.querySelector("input").addEventListener("change",function(){for(let e=0;e<t.length;e++)t[e].removeAttribute("checked");t[e].setAttribute("checked",!0),this.setAttribute("selected",e.toString())}.bind(this))}}.bind(this);new MutationObserver(t).observe(this,{attributes:!0,childList:!0,subtree:!0})}}window.customElements.define("radio-group",Tt);const Ct=document.createElement("template");Ct.innerHTML='\n<style>\n     table, td, th {\n         border: 1px solid black;\n         text-align: left;\n         padding: 10px;\n    }\n    table {\n         border-collapse: collapse;\n         width: 100%;\n    }\n    .ascending-descending{\n        cursor: pointer;\n    }\n    .ascending-descending:hover, .ascending-descending-active{\n        color: rgba(35,27,204,0.6);\n    }\n    .loader,\n    .loader:after {\n      border-radius: 50%;\n      width: 10em;\n      height: 10em;\n    }\n    .loader {\n      margin: 60px auto;\n      font-size: 10px;\n      position: relative;\n      text-indent: -9999em;\n      border-top: 1.1em solid rgba(0,0,0, 0.2);\n      border-right: 1.1em solid rgba(0,0,0, 0.2);\n      border-bottom: 1.1em solid rgba(0,0,0, 0.2);\n      border-left: 1.1em solid #000000;\n      -webkit-transform: translateZ(0);\n      -ms-transform: translateZ(0);\n      transform: translateZ(0);\n      -webkit-animation: load8 1.1s infinite linear;\n      animation: load8 1.1s infinite linear;\n    }\n    @-webkit-keyframes load8 {\n      0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n      }\n      100% {\n        -webkit-transform: rotate(360deg);\n        transform: rotate(360deg);\n      }\n    }\n    @keyframes load8 {\n      0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n      }\n      100% {\n        -webkit-transform: rotate(360deg);\n        transform: rotate(360deg);\n      }\n    }\n    .search{\n      float:right;\n      width: 30%;\n      box-sizing: border-box;\n      border:1px solid #ccc;\n      border-bottom:  2px solid black ;\n      border-radius: 4px;\n      font-size: 16px;\n      background-color: white;\n      padding: 12px 20px 12px 40px;\n      outline:none;\n      margin-bottom: 10px;\n    }\n    @media only screen and (max-width: 600px) {\n      .search {\n        width: 50%;\n      }\n    }\n    .search-form{\n        position: relative;\n    }\n    .search-form button{\n        background: white;\n        border: none;\n        padding: 5px 15px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 16px;\n        margin: 4px 2px;\n        cursor: pointer;\n        border-radius:5px;\n        transition: 0.5s;\n        outline: none;\n    }\n    .search-form .submit-button{\n        position: absolute;\n        right: 0;\n        top: 2px;\n    }\n    .search-form .submit-button:hover{\n        background: rgba(204,204,204,0.04);\n    }\n    .empty-data{\n        margin: 150px 0;\n        text-align: center;\n    }\n    .empty-data span{\n        font-size: 80px;\n    }\n    .empty-data p{\n        font-size: 50px;\n    }\n    ::slotted([slot="caption"]){\n        font-size: 40px;\n        text-align: center;\n    }\n    .select-field-for-pagination{\n        font-size: 20px;\n    }\n    .select-field-for-pagination select{\n      width: 60px;\n      padding: 12px 5px;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      resize: vertical;\n    }\n    .pagination-bar{\n        margin:40px;\n        float: right;\n        display: inline-block;\n    }\n    \n    .pagination-bar a {\n        color: black;\n        float: left;\n        padding: 8px 16px;\n        text-decoration: none;\n        border: 1px solid #ddd;\n        cursor: pointer;\n    }\n    \n    .pagination-bar a.active {\n        background-color: black;\n        color: white;\n        border: 1px solid black;\n    }\n    \n    .pagination-bar a:hover:not(.active) {background-color: #ddd;}\n    \n    .pagination-bar a:first-child {\n        border-top-left-radius: 5px;\n        border-bottom-left-radius: 5px;\n    }\n    \n    .pagination-bar a:last-child {\n        border-top-right-radius: 5px;\n        border-bottom-right-radius: 5px;\n    }\n   \n\n</style>\n\n<div class="data-grid">\n    <slot class="caption" name="caption"></slot>\n    <div class="select-field-for-pagination">\n      No. of entries showing by pagination\n       <select id="pagination-select" name="pagination-select">\n        <option value="10">10</option>\n        <option value="20">20</option>\n        <option value="50">50</option>\n        <option value="100">100</option>\n        <option value="200">200</option>\n      </select>     \n    </div>\n    <div class="search-form">\n        <form>\n            <input type="text" class="search" placeholder="search here">\n            <button type="submit" class="submit-button">&#128269;</button>\n        </form>\n    </div>\n    <div class="loader">Loading...</div>\n    <table>\n        <thead></thead>\n    </table>\n    <div class="empty-data">\n        <span>&#128557;</span>\n        <p>Sorry, Did not find any thing.</p>\n    </div>\n        <div class="pagination-bar">\n         <a class="previous">&laquo;</a>\n         <span class="pagination-link">\n          </span>\n          <a class="next">&raquo;</a>\n    </div>\n</div>\n  ';class Ht extends HTMLElement{static get observedAttributes(){return["header","key"]}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(Ct.content.cloneNode(!0))}attributeChangedCallback(t,e,n){null!=this.header&&null!=this.key&&this.fetchTableData()}connectedCallback(){this.reverseStatus=!1,this.searched=!1,this.searchResultData=[],this.activeButton=0,this.entriesOnPage="10",this.activePageNo=0,this.pageData=[],this.initializingBasicVariables(),this.initializingBasicStyling(),this.addEventListeners()}pageLength(){this.activeButton=0,this.activePageNo=0;let t=this.selectPagination.selectedIndex;this.entriesOnPage=this.selectPagination.options[t].text,this.noOfPages=this.tableData.length/this.entriesOnPage,this.paginationButtons(),this.paginating()}paginating(){this.searchInput.value="";let t=[],e=0;for(let n=0;n<this.tableData.length;n+=parseInt(this.entriesOnPage)){let o=parseInt(this.entriesOnPage)+n;t[e]=this.tableData.slice(n,o),e++}this.tableBody.remove(),this.pageData=t[this.activePageNo],this.generateData(this.pageData)}paginationButtons(){if(this.paginationSpan.innerHTML="",this.noOfPages<5&&this.noOfPages>=1)for(let t=0;t<this.noOfPages;t++){let e=document.createElement("a");e.innerText=t+1,this.paginationSpan.appendChild(e),this.activePage()}else if(this.noOfPages<1)alert("There are only "+this.tableData.length+" entities");else for(let t=0;t<5;t++){let e=document.createElement("a");e.innerText=t+1,this.paginationSpan.appendChild(e),this.activePage()}let t=this.paginationSpan.querySelectorAll("a").length;for(let e=0;e<t;e++)this.paginationSpan.querySelectorAll("a")[e].addEventListener("click",function(){let t=this.paginationSpan.querySelectorAll("a")[e].innerHTML;this.activePageNo=t-1,this.paginating(),this.activeButton=e,this.activePage()}.bind(this));this.paginationBar.querySelector(".previous").addEventListener("click",this.previousPage.bind(this)),this.paginationBar.querySelector(".next").addEventListener("click",this.nextPage.bind(this))}previousPage(){let t=this.paginationSpan.querySelectorAll("a");if(console.log(t[0].innerHTML),this.activePageNo>0&&t[0].innerHTML>1){for(let e=0;e<t.length;e++)t[e].innerHTML--;this.activePageNo--,this.paginating()}else this.paginationBar.querySelector(".previous").style.background=" #d9d9d9"}nextPage(){let t=this.paginationSpan.querySelectorAll("a");if(t[t.length-1].innerHTML<this.noOfPages){for(let e=0;e<t.length;e++)t[e].innerHTML++;this.activePageNo++,this.paginating()}else this.paginationBar.querySelector(".next").style.background=" #d9d9d9"}activePage(){let t=this.paginationSpan.querySelectorAll("a");for(let e=0;e<t.length;e++)t[e].classList.remove("active");t[this.activeButton].classList.add("active")}searchData(t,e){t.preventDefault();let n,o=this.searchInput.value.toUpperCase();this.searched=!1,this.searchResultData=[];for(let t=0;t<e.length;t++)for(let i=0;i<this.keyValues.length;i++){let s=e[t][this.keyValues[i]];(n="string"==typeof s?s.toUpperCase():s.toString().toUpperCase())===o&&(this.searchResultData.push(e[t]),this.tableBody.remove(),this.generateData(this.searchResultData),this.searched=!0)}this.searched||(this.table.style.display="none",this.emptyData.style.display="")}headerForSorting(t,e){let n=document.createElement("span");n.style.cssFloat="right";let o=document.createElement("span"),i=document.createElement("span");return o.innerText="▲",i.innerText="▼",o.classList.add("ascending-descending"),i.classList.add("ascending-descending"),n.appendChild(o),n.appendChild(i),o.addEventListener("click",function(){this.searched?this.sorting("ascending",t,e,this.searchResultData):this.pagination?this.sorting("ascending",t,e,this.pageData):this.sorting("ascending",t,e,this.tableData)}.bind(this),!1),i.addEventListener("click",function(){this.searched?this.sorting("descending",t,e,this.searchResultData):this.pagination?this.sorting("descending",t,e,this.pageData):this.sorting("descending",t,e,this.tableData)}.bind(this),!1),n}sorting(t,e,n,o){let i=e;n&&(i=e-1);let s=this.keyValues[i];"ascending"===t?0===e&&this.serialno?this.reverseStatus&&(this.reverseStatus=!1,o.reverse(),this.tableBody.remove(),this.generateData(o)):(this.arrangeData=[...o].sort(this.arrangedOrder(s)),this.tableBody.remove(),this.generateData(this.arrangeData)):"descending"===t&&(0===e&&this.serialno?(this.reverseStatus=!0,o.reverse(),this.tableBody.remove(),this.generateData(o)):(this.arrangeData=[...o].sort(this.arrangedOrder(s,"desc")),this.tableBody.remove(),this.generateData(this.arrangeData)))}arrangedOrder(t,e="asc"){return function(n,o){if(!n.hasOwnProperty(t)||!o.hasOwnProperty(t))return 0;const i="string"==typeof n[t]?n[t].toUpperCase():n[t],s="string"==typeof o[t]?o[t].toUpperCase():o[t];let r=0;return i>s?r=1:i<s&&(r=-1),"desc"==e?-1*r:r}}generateTable(){this.generateHeading(),this.generateData(this.tableData)}generateData(t){this.keyValues=this.key.split(","),this.tableBody=this.table.createTBody();for(let e=0;e<t.length;e++){let n=this.table.insertRow(e),o=Object.keys(t[e]);for(let i=0;i<o.length;i++)for(let s=0;s<this.keyValues.length;s++){if(this.keyValues[s]===o[i]&&0===s&&this.serialno){let t=document.createElement("td");n.appendChild(t).innerText=e+1}if(this.keyValues[s]===o[i]){let o=document.createElement("td");n.appendChild(o).innerText=t[e][this.keyValues[s]]}}}}generateHeading(){this.heading=this.header.split(","),this.serialno&&this.heading.unshift("Sr No");for(let t=0;t<this.heading.length;t++){let e=document.createElement("th"),n=document.createElement("p");if(n.style.display="inline",e.appendChild(n).innerText=this.heading[t],this.sortable){let n=this.headerForSorting(t,this.serialno);e.appendChild(n)}this.table.createTHead().appendChild(e)}}fetchTableData(){let t=this.api;fetch(t).then(t=>t.json()).then(t=>{this.tableData=t,this.generateTable(),this.loader.style.display="none",this.searchBar.style.display="inline",this.submitButton.style.display="",this.pagination&&(this.shadowRoot.querySelector(".select-field-for-pagination").style.display="",this.paginationBar.style.display="",this.noOfPages=this.tableData.length/this.entriesOnPage,this.paginationButtons(),this.paginating())})}initializingBasicVariables(){this.table=this.shadowRoot.querySelector("table"),this.loader=this.shadowRoot.querySelector(".loader"),this.searchBar=this.shadowRoot.querySelector(".search"),this.submitButton=this.shadowRoot.querySelector(".submit-button"),this.searchForm=this.shadowRoot.querySelector("form"),this.searchInput=this.shadowRoot.querySelector("input"),this.emptyData=this.shadowRoot.querySelector(".empty-data"),this.selectPagination=this.shadowRoot.querySelector("select"),this.paginationSelectField=this.shadowRoot.querySelector(".select-field-for-pagination"),this.paginationBar=this.shadowRoot.querySelector(".pagination-bar"),this.paginationSpan=this.shadowRoot.querySelector(".pagination-link")}initializingBasicStyling(){this.searchBar.style.display="none",this.emptyData.style.display="none",this.submitButton.style.display="none",this.paginationSelectField.style.display="none",this.paginationBar.style.display="none"}addEventListeners(){this.searchForm.addEventListener("submit",function(t){this.pagination?this.searchData(t,this.pageData):this.searchData(t,this.tableData)}.bind(this)),this.selectPagination.addEventListener("change",this.pageLength.bind(this)),this.searchInput.addEventListener("keyup",function(){if(""===this.searchInput.value){this.table.style.display="",this.emptyData.style.display="none",this.shadowRoot.querySelector("thead").remove(),this.tableBody.remove(),this.generateTable(this.tableData)}}.bind(this),!1)}get api(){return this.getAttribute("api")}get header(){return this.getAttribute("header")}get key(){return this.getAttribute("key")}get serialno(){return this.hasAttribute("serialno")}get sortable(){return this.hasAttribute("sortable")}get search(){return this.hasAttribute("search")}get pagination(){return this.hasAttribute("pagination")}}window.customElements.define("data-grid",Ht);const Mt=document.createElement("Template");Mt.innerHTML="\n<div>\n    <slot></slot>\n</div>\n";class Dt extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(Mt.content.cloneNode(!0))}connectedCallback(){window.addEventListener("DOMContentLoaded",t=>{this.allNodes=this.querySelectorAll("tree-node"),this.arrangeNodes()})}arrangeNodes(){this.notHaveChild(),this.closeNodes();for(let t=0;t<this.allNodes.length;t++)this.allNodes[t].shadowRoot.querySelector(".arrow").addEventListener("click",function(){this.nodeClick(t)}.bind(this))}notHaveChild(){for(let t=0;t<this.allNodes.length;t++)!this.allNodes[t].children.length>0&&(this.allNodes[t].shadowRoot.querySelector(".arrow").style.display="none",this.allNodes[t].shadowRoot.querySelector(".value").style.marginLeft="25px")}closeNodes(){for(let t=0;t<this.allNodes.length;t++)this.allNodes[t].style.display="none";this.allNodes[0].style.display="inline"}nodeClick(t){let e=this.allNodes[t].children;for(let t=0;t<e.length;t++){if("display: none;"===e[t].getAttribute("style"))for(let n=0;n<e.length;n++)e[t].style.display="inline";else for(let n=0;n<e.length;n++)e[t].style.display="none"}}}window.customElements.define("hierarchical-tree",Dt);const Bt=document.createElement("template");Bt.innerHTML='\n<style>\n    .row{\n        display: flex;\n        flex-wrap: wrap;\n        position: relative;\n    }\n    p.arrow{\n          transform: rotate(90deg);\n          width: 20px;\n          height: 20px;\n          cursor: pointer;\n          margin: 3px;\n          font-size: 14px;\n    }\n    .value{\n        white-space: nowrap;\n        margin: 0;\n    }\n    .node{\n            margin-left: 40px;\n    }\n</style>\n<div class="row">\n    <p class="arrow">&#9650;</p>\n    <p class="value"></p>\n    </div>\n    <div class="node">\n        <slot></slot>\n    </div>\n';class Nt extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(Bt.content.cloneNode(!0))}connectedCallback(){this.angle=90,this.shadowRoot.querySelector(".value").innerHTML=this.value,this.shadowRoot.querySelector(".arrow").addEventListener("click",function(){90===this.angle?(this.shadowRoot.querySelector(".arrow").style.transform="rotate(180deg)",this.shadowRoot.querySelector(".arrow").style.marginTop="0",this.angle=180):180===this.angle&&(this.shadowRoot.querySelector(".arrow").style.transform="rotate(90deg)",this.shadowRoot.querySelector(".arrow").style.marginTop="3px",this.angle=90)}.bind(this))}get value(){return this.getAttribute("value")}}window.customElements.define("tree-node",Nt);const zt=document.createElement("template");zt.innerHTML="\n<div>\n    <slot></slot>\n</div>\n  ";class Ft extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(zt.content.cloneNode(!0))}connectedCallback(){this.initialRoute(),this.routing()}routing(){null!==this.querySelector("nav-bar")&&this.querySelector("nav-bar").addEventListener("click",this.initialRoute.bind(this))}initialRoute(){if(null!==this.querySelector("nav-bar")){let t=this;setTimeout((function(){let e=t.querySelector("nav-bar").getAttribute("href");t.setAttribute("route",e)}),50)}}}window.customElements.define("dash-board",Ft);const It=document.createElement("template");It.innerHTML='\n<div style="margin: 0 10px;">\n    <slot></slot>\n</div>\n  ';class Ot extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(It.content.cloneNode(!0))}}window.customElements.define("main-menu",Ot);const Pt=document.createElement("template");Pt.innerHTML="\n<style>\n    li {\n      float: left;\n    }\n    \n    li a {\n      display: block;\n      color: black;\n      text-align: center;\n      padding: 16px;\n      text-decoration: none;\n      font-weight: bold;\n      cursor: pointer;\n      font-size: 19px;\n    }\n    ::slotted(*){\n      max-height: 100%;\n      max-width: 90px;\n    }\n</style>\n<li>\n    <a>\n        <slot></slot>\n    </a>\n</li>\n  ";class Vt extends HTMLElement{static get observedAttributes(){return["dark"]}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(Pt.content.cloneNode(!0))}attributeChangedCallback(t,e,n){this.dark&&(this.shadowRoot.querySelector("a").style.color="white")}get dark(){return this.hasAttribute("dark")}}window.customElements.define("nav-brand",Vt);const Ut=document.createElement("template");Ut.innerHTML="\n<style>\n    li {\n        float: left;\n    }\n    \n    li a {\n        display: block;\n        color: black;\n        text-align: center;\n        padding: 16px;\n        text-decoration: none;\n        cursor: pointer;\n    }\n    li a:hover{\n        color: grey;\n    }\n    .active{\n        font-weight: bold;\n    }\n</style>\n<li>\n    <a>\n        <slot></slot>\n    </a>\n</li>\n  ";class _t extends HTMLElement{static get observedAttributes(){return["dark"]}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(Ut.content.cloneNode(!0))}connectedCallback(){this.active&&this.shadowRoot.querySelector("a").classList.add("active")}attributeChangedCallback(t,e,n){this.dark&&(this.shadowRoot.querySelector("a").style.color="white")}get dark(){return this.hasAttribute("dark")}get active(){return this.hasAttribute("active")}set active(t){t?this.setAttribute("active",""):this.removeAttribute("active")}}window.customElements.define("nav-link",_t);const jt=document.createElement("template");jt.innerHTML="\n<style>\n    nav{\n      margin: 0;\n      padding: 0;\n      overflow: hidden;\n      background-color: #F8F9FA;\n    }\n    ul {\n      margin: 0; \n      list-style-type: none;\n    }\n</style>\n<nav>\n    <ul>\n        <slot></slot>\n    </ul>\n</nav>\n  ";class Gt extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(jt.content.cloneNode(!0))}connectedCallback(){this.nav=this.shadowRoot.querySelector("nav"),this.routing(),this.theme(),this.linkActivation()}routing(){let t=this.querySelectorAll("nav-link");for(let e=0;e<t.length;e++)if(t[e].hasAttribute("active")){let n=t[e].getAttribute("href");this.setAttribute("href",n)}}linkActivation(){let t=this.querySelectorAll("nav-link");for(let e=0;e<t.length;e++)this.querySelectorAll("nav-link")[e].addEventListener("click",this.activate.bind(this,e))}activate(t){let e=this.querySelectorAll("nav-link");for(let t=0;t<e.length;t++)e[t].active=!1,e[t].shadowRoot.querySelector("a").classList.remove("active");e[t].active=!0,e[t].shadowRoot.querySelector("a").classList.add("active"),this.routing()}theme(){window.onload=function(){if(this.dark){this.nav.style.background="#343A40",this.querySelector("nav-brand").setAttribute("dark",!0);for(let t=0;t<this.querySelectorAll("nav-link").length;t++)this.querySelectorAll("nav-link")[t].setAttribute("dark",!0)}}.bind(this)}get dark(){return this.hasAttribute("dark")}}window.customElements.define("nav-bar",Gt)}]);